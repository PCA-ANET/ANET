{"version":3,"sources":["features/Accounts/components/AccountsModal.js","components/FormattedNumber/FormattedNumber.jsx","components/ShowAccount/ShowAccount.js","components/FormattedDate/FormattedDate.jsx","features/Accounts/components/Operations.js","redux/operations/operations.actions.js","features/Accounts/components/Signaletic.js","features/Accounts/components/RIB.js","features/Accounts/components/feature.js","features/Accounts/index.js","pdf/account/bankStatement.js","components/Panel/Panel.js","assets/SvgComponents/NoDataSvg/NoDataSvg.js","components/DataTable/CustomDataTable.jsx","utils/FormatsConfiguration.js","components/Ui/CustomModel/FormModal.styles.jsx","components/Ui/CustomModel/FormModal.jsx","components/DateCalendar/DateCalendar.js","utils/DateUtils.js","components/PageHeadNav/PageHeadNav.js","assets/img/logos/logo.PNG"],"names":["AccountsModal","state","tempSelectedAccountId","_this","props","selectedAccountId","_isChecked","clientAccountId","toString","_handleAccountChange","changeEvent","setState","target","value","_toggleModal","toggleModal","_handleFormSubmit","formSubmitEvent","preventDefault","selectAccount","_renderAccounts","accounts","length","react_default","a","createElement","className","onSubmit","map","account","index","accountName","accountNumber","key","id","type","name","checked","onChange","htmlFor","concat","prevProps","prevState","snapshot","this","FormModal","title","t","show","modalShow","handleClose","handleValidate","hasValidateBtn","validateBtnDisabled","React","PureComponent","connect","Accounts","dispatch","FormattedNumber","Fragment","number","_props$format","format","decimals","groupsSeparator","groupingBlock","regExp","RegExp","fixedNumberParts","parseFloat","toFixed","split","replace","formattedNumber","join","currency","currencyIsPrefix","positive","negative","formatNumber","showAccount","bookBalance","undefined","data-modal","onClick","onclick","children","components_FormattedNumber_FormattedNumber","availableBalance","FormatsConfiguration","AmountFormat","FormatDateComponent","dateTime","moment","Operations","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_dateChangeHandler","forceUpdate","_buildDataTableRows","operations","data","date","dateValue","valueDate","description","code","amount","sign","_dateTemplate","rowData","column","FormattedDate","DateTimeFormat","fullDate","_dateValueTemplate","_amountTemplate","style","color","_dateCalendarComponent","maxDate","DateCalendar","handleDateChange","e","dt","filter","Date","loading","totalRecords","getOperations","_this2","rows","Panel","selectedAccountNumber","selectedAccount","CustomDataTable","onRowReorder","reference","el","columnResizeMode","cols","field","header","body","filterElement","filterFunction","dateFilter","accountId","actionCreator","OperationsActionTypes","GET_OPERATIONS","Signaletic","getSignaletic","_this$props$signaleti","signaletic","NomPrenom","PieceId","Tel","Agec","react_router_dom","to","RIB","_this$props$rib","rib","bankCode","agencyCode","ribKey","width","align","colSpan","fullName","getSelectedAccountRIB","Feature","_renderAccountName","_activateTab","tab","activateTab","_renderActiveTab","activeTab","components_Operations","components_Signaletic","components_RIB","ShowAccount","PageHeadNav","components_AccountsModal","getSelectedAccount","Menu","accountsActiveTab","activateAccountsTab","Account","bankStatement","numeroCompte","nextProps","react_pdf_browser_es","styles","height","src","require","fixed","author","text","Table","TR","TD","TT1","TD1","TD3","TT","pageNumber","render","_ref","totalPages","Component","Font","register","family","styled","View","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","Text","_templateObject6","_templateObject7","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","fontFamily","marginBottom","subtitle","margin","image","marginVertical","marginHorizontal","position","bottom","left","right","headers","label","panel","filenameExcel","filenamePdf","button","btntxt","download","document","account_bankStatement","fileName","react_csv","separator","filename","SvgComponent","assign","transform","fill","fillRule","cx","cy","rx","ry","stroke","d","OurDataTableCustom","globalFilter","NoDataMessage","react","NoDataSvg","inputtext","onInput","enteriesCount","footer","dynamicColumns","col","i","headerClassName","sortable","sortField","filterMatchMode","datatable","tableClassName","resizableColumns","paginator","ref","rowsPerPageOptions","reorderableColumns","reorderableRows","emptyMessage","defaultProps","NumberFormat","shortDate","time","FormModalContainer","div","attrs","FormModalButtons","hasCancelBtn","data-text","disabled","cancelBtnDisabled","cancelTitle","validateTitle","BackDrop","clicked","data-dismiss","alert","renderFooter","FormModal_FormModalButtons","_Component","C_Workspace_Refonte_ABI_Version_Sprint_2_dev_front_ebanking_BanqueAtlantique_Front_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Workspace_Refonte_ABI_Version_Sprint_2_dev_front_ebanking_BanqueAtlantique_Front_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Workspace_Refonte_ABI_Version_Sprint_2_dev_front_ebanking_BanqueAtlantique_Front_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","selectedDates","onSelectDate","dates","C_Workspace_Refonte_ABI_Version_Sprint_2_dev_front_ebanking_BanqueAtlantique_Front_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Workspace_Refonte_ABI_Version_Sprint_2_dev_front_ebanking_BanqueAtlantique_Front_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","CalendarClass","react__WEBPACK_IMPORTED_MODULE_5___default","primereact_calendar__WEBPACK_IMPORTED_MODULE_6__","readOnlyInput","dateFormat","selectionMode","showIcon","showButtonBar","__webpack_require__","__webpack_exports__","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","_FormatsConfiguration__WEBPACK_IMPORTED_MODULE_1__","formatDateTime","some","search","startsWith","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","pageHeadNav","module","exports","p"],"mappings":"8LASMA,6MACJC,MAAQ,CAAEC,sBAAuBC,EAAKC,MAAMC,qBAE5CC,WAAa,SAAAC,GAAe,OAC1BJ,EAAKF,MAAMC,uBACXK,EAAgBC,aAAeL,EAAKF,MAAMC,sBAAsBM,cAElEC,qBAAuB,SAAAC,GACrBP,EAAKQ,SAAS,CACZT,sBAAuBQ,EAAYE,OAAOC,WAI9CC,aAAe,WACbX,EAAKC,MAAMW,iBAGbC,kBAAoB,SAAAC,GAClBA,EAAgBC,iBAChBf,EAAKC,MAAMe,cAAchB,EAAKF,MAAMC,uBACpCC,EAAKW,kBAGPM,gBAAkB,WAChB,GAAIjB,EAAKC,MAAMiB,SAASC,OAAS,EAC/B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUxB,EAAKa,mBAClBb,EAAKC,MAAMiB,SAASO,IAAI,SAACC,EAASC,GAAU,IACnCvB,EAAgDsB,EAAhDtB,gBAAiBwB,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,cACtC,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCO,IAAKH,GACrDP,EAAAC,EAAAC,cAAA,SACES,GAAI3B,EACJ4B,KAAK,QACLC,KAAK,OACLvB,MAAON,EACP8B,QAASlC,EAAKG,WAAWC,GACzB+B,SAAUnC,EAAKM,uBAEjBc,EAAAC,EAAAC,cAAA,SAAOc,QAAShC,GAAhB,GAAAiC,OACMT,EADN,WAAAS,OACwBR,6FAYvBS,EAAWC,EAAWC,GACnCF,EAAUpC,oBAAsBuC,KAAKxC,MAAMC,mBAC7CuC,KAAKjC,SAAS,CAAET,sBAAuB0C,KAAKxC,MAAMC,qDAKpD,OACEkB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEC,MAAOC,YAAE,0BACTC,KAAMJ,KAAKxC,MAAM6C,UACjBC,YAAaN,KAAK9B,aAClBqC,eAAgBP,KAAK5B,kBACrBoC,gBAAc,EACdC,oBAA0D,OAArCT,KAAK3C,MAAMC,uBAE/B0C,KAAKxB,0BAtEckC,IAAMC,eA0FnBC,cALS,SAAAvD,GAAK,MAAK,CAChCgD,UAAWhD,EAAMwD,SAASR,UAC1B5C,kBAAmBJ,EAAMwD,SAASpD,oBAXT,SAAAqD,GAAQ,MAAK,CACtCvC,cAAe,SAAAd,GACbqD,EAASvC,YAAcd,KAEzBU,YAAa,WACX2C,EAAS3C,kBASEyC,CAGbxD,GC1Da2D,EAFS,SAACvD,GAAD,OAAkBmB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KA1BrB,SAACxD,GACpB,IAAKA,EAAMyD,OAAQ,OAAO,KADW,IAAAC,EAEgB1D,EAAM2D,OAAnDC,EAF6BF,EAE7BE,SAAUC,EAFmBH,EAEnBG,gBAAiBC,EAFEJ,EAEFI,cAC7BC,EAAS,IAAIC,OAAJ,gBAAA5B,OAA2B0B,EAA3B,eAAuD,KAChEG,EAAmBC,WAAWlE,EAAMyD,QACvCU,QAAQP,GACRxD,WACAgE,MAAM,KACTH,EAAiB,GAAKA,EAAiB,GAAGI,QACxCN,EACA,KAAK3B,OAAOyB,IAEd,IAAIS,EAAkBL,EAAiBM,KAAK,KAW5C,OAVIvE,EAAMwE,WAENF,EADEtE,EAAM2D,OAAOc,iBACGzE,EAAMwE,SAASpC,OAAf,IAAAA,OAA0BkC,IAE1BA,EAAgBlC,OAAhB,IAAAA,OAA2BpC,EAAMwE,YAGnDxE,EAAM0E,SACRJ,EAAkB,IAAIlC,OAAOkC,GACpBtE,EAAM2E,WAAUL,EAAkB,IAAIlC,OAAOkC,IACjDA,EAGoCM,CAAa5E,cCG3C6E,EAxCK,SAAA7E,GAClB,IAAIyB,EAAU,CAAEE,YAAa,GAAIC,cAAe,GAAIkD,YAAa,IAIjE,YAHsBC,IAAlB/E,EAAMyB,UACRA,EAAUzB,EAAMyB,SAGhBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACXG,EAAQE,YACTR,EAAAC,EAAAC,cAAA,sBAAWI,EAAQG,cAAnB,MAEFT,EAAAC,EAAAC,cAAA,UACEC,UAAU,iDACVS,KAAK,SACLiD,aAAW,kBACXC,QAASjF,EAAMkF,WAGnB/D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAA4BtB,EAAMmF,WAElDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOqB,YAAE,gCACzBxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACdH,EAAAC,EAAAC,cAAC+D,EAAD,CACE3B,OAAQhC,EAAQ4D,iBAChB1B,OAAQ2B,IAAqBC,aAC7Bf,SAAU7B,YAAE,0FCdb6C,EANa,SAACxF,GAAD,OAC1BmB,EAAAC,EAAAC,cAAA,OAAKC,UAAWtB,EAAMsB,YANAmE,EAOJzF,EAAMyF,SAPQ9B,EAOE3D,EAAM2D,OANnC8B,EACEC,IAAOD,GAAU9B,OAAOA,GADT,OADD,IAAC8B,EAAU9B,8BCE5BgC,cACJ,SAAAA,IAAc,IAAA5F,EAAA6F,OAAAC,EAAA,EAAAD,CAAApD,KAAAmD,IACZ5F,EAAA6F,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAxD,QAQFyD,mBAAqB,WACnBlG,EAAKmG,eAVOnG,EAqBdoG,oBAAsB,kBACpBpG,EAAKC,MAAMoG,WAAW5E,IAAI,SAAA6E,GAExB,MAAO,CACLC,KAF2DD,EAArDC,KAGNC,UAH2DF,EAA/CG,UAIZC,YAJ2DJ,EAApCI,YAKvBC,KAL2DL,EAAvBK,KAMpCC,OAN2DN,EAAjBM,OAO1CC,KAP2DP,EAATO,SAvB1C7G,EAiCd8G,cAAgB,SAACC,EAASC,GACxB,MAAqB,MAAjBD,EAAQF,KAERzF,EAAAC,EAAAC,cAAC2F,EAAD,CACEvB,SAAUqB,EAAQR,KAClB3C,OAAQ2B,IAAqB2B,eAAeC,SAC5C5F,UAAU,wBAKZH,EAAAC,EAAAC,cAAC2F,EAAD,CACEvB,SAAUqB,EAAQR,KAClB3C,OAAQ2B,IAAqB2B,eAAeC,SAC5C5F,UAAU,0BA/CJvB,EAoDdoH,mBAAqB,SAACL,EAASC,GAAV,OACnB5F,EAAAC,EAAAC,cAAC2F,EAAD,CACEvB,SAAUqB,EAAQP,UAClB5C,OAAQ2B,IAAqB2B,eAAeC,YAvDlCnH,EA0DdqH,gBAAkB,SAACN,EAASC,GAC1B,MAAqB,MAAjBD,EAAQF,KAERzF,EAAAC,EAAAC,cAAA,QAAMgG,MAAO,CAAEC,MAAO,UACpBnG,EAAAC,EAAAC,cAAC+D,EAAD,CACE3B,OAAQqD,EAAQH,OAChBjC,UAAQ,EACRf,OAAQ2B,IAAqBC,gBAMjCpE,EAAAC,EAAAC,cAAA,QAAMgG,MAAO,CAAEC,MAAO,QACpBnG,EAAAC,EAAAC,cAAC+D,EAAD,CACE3B,OAAQqD,EAAQH,OAChBhC,UAAQ,EACRhB,OAAQ2B,IAAqBC,iBA3EzBxF,EAiFdwH,uBAAyB,SAAAC,GAAO,OAC9BrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACED,QAASA,EACTE,iBAAkB,SAAAC,GAChB5H,EAAK6H,GAAGC,OAAOF,EAAElH,MAAO,OAAQ,UAChCV,EAAKkG,yBApFT,IAAIuB,EAAU,IAAIM,KAFN,OAGZ/H,EAAKF,MAAQ,CACXkI,SAAS,EACTC,aAAc,EACdR,QAASA,GANCzH,mFAcZyC,KAAKxC,MAAMiI,2DAGM5F,EAAWC,EAAWC,GACnCF,EAAUpC,oBAAsBuC,KAAKxC,MAAMC,mBAC7CuC,KAAKxC,MAAMiI,iDAuEN,IAAAC,EAAA1F,KACH2F,EAAO3F,KAAK2D,sBAChB,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACE1F,MAAOC,YAAE,8BACT0F,sBAAuB7F,KAAKxC,MAAMsI,iBAElCnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACE9H,MAAO0H,EACPK,aAAc,SAAAb,GAAC,OAAKQ,EAAOR,EAAElH,OAC7BgI,UAAW,SAAAC,GAAE,OAAKR,EAAKN,GAAKc,GAC5BC,iBAAiB,MACjBC,KAAM,CACJ,CACEC,MAAO,OACPC,OAAQnG,YAAE,iBACVoG,KAAMvG,KAAKqE,cACXgB,QAAQ,EACRmB,cAAexG,KAAK+E,uBAClB/E,KAAK3C,MAAM2H,SAEbyB,eAAgBC,KAElB,CACEL,MAAO,YACPC,OAAQnG,YAAE,sBACVoG,KAAMvG,KAAK2E,mBACXU,QAAQ,EACRmB,cAAexG,KAAK+E,uBAClB/E,KAAK3C,MAAM2H,SAEbyB,eAAgBC,KAElB,CACEL,MAAO,cACPC,OAAQnG,YAAE,yBAEZ,CACEkG,MAAO,OACPC,OAAQnG,YAAE,uBAEZ,CACEkG,MAAO,SACPC,OAAQnG,YAAE,kBAAmB,CAC3B6B,SAAU7B,YAAE,yBAGdoG,KAAMvG,KAAK4E,gCA9IRlE,IAAMC,eAsKhBC,cALS,SAAAvD,GAAK,MAAK,CAChCuG,WAAYvG,EAAM8F,WAAWS,WAC7BnG,kBAAmBJ,EAAMwD,SAASpD,oBART,SAAAqD,GAAQ,MAAK,CACtC2E,cAAe,SAAAkB,GACb7F,ECtKgC,CAClCvB,KAAMqH,YAAc,MAAOC,IAAsBC,qBD8KpClG,CAGbuC,GE/KI4D,8LAEF/G,KAAKxC,MAAMwJ,iDAGJ,IAAAC,EACiCjH,KAAKxC,MAAM0J,WAA7CC,EADCF,EACDE,UAAWC,EADVH,EACUG,QAASC,EADnBJ,EACmBI,IAAKC,EADxBL,EACwBK,KAC/B,OACE3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZqB,YAAE,4BAELxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACbqB,YAAE,qBADL,SAEExB,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAMC,GAAG,KAAT,YAMV7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,sBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQqI,IAE1BxI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,oBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQqB,YAAE,kBAE5BxB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,sBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQsI,IAE1BzI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,sBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAElBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,oBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQwI,MAI9B3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,qBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAElBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,wBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAElBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASqB,YAAE,kBAC3BxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAElBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,qBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAElBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbqB,YAAE,yBAELxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQuI,EAAI,sBA7F/B3G,IAAMC,eAuHhBC,cAJS,SAAAvD,GAAK,MAAK,CAChC6J,WAAY7J,EAAMwD,SAASqG,aAPF,SAAApG,GAAQ,MAAK,CACtCkG,cAAe,WACblG,EAASkG,kBAQEpG,CAGbmG,YCzHIU,8LAEFzH,KAAKxC,MAAMwJ,iDAGJ,IAAAU,EAC+C1H,KAAKxC,MAAMmK,IAA3DC,EADCF,EACDE,SAAUC,EADTH,EACSG,WAAYzI,EADrBsI,EACqBtI,cAAe0I,EADpCJ,EACoCI,OAC3C,OACEnJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYqB,YAAE,iBAC7BxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACbqB,YAAE,qBADL,SAEExB,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAMC,GAAG,KAAT,YAMV7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAKsB,YAAE,uBAETxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkJ,MAAM,OAAO5H,YAAE,sBACnBxB,EAAAC,EAAAC,cAAA,MAAIkJ,MAAM,OAAO5H,YAAE,wBACnBxB,EAAAC,EAAAC,cAAA,UAAKsB,YAAE,2BACPxB,EAAAC,EAAAC,cAAA,MAAIkJ,MAAM,MAAMC,MAAM,UACnB7H,YAAE,sBAITxB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK+I,GACLjJ,EAAAC,EAAAC,cAAA,UAAKgJ,GACLlJ,EAAAC,EAAAC,cAAA,UAAKO,GACLT,EAAAC,EAAAC,cAAA,UAAKiJ,IAEPnJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIoJ,QAAQ,KAAZ,UAGJtJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIoJ,QAAQ,KAAK9H,YAAE,uBACnBxB,EAAAC,EAAAC,cAAA,MAAIoJ,QAAQ,KAAZ,SAKRtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAKsB,YAAE,mBAAP,QAGJxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAKsB,YAAE,2BACPxB,EAAAC,EAAAC,cAAA,eAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAKsB,YAAE,0BACPxB,EAAAC,EAAAC,cAAA,SAAImB,KAAKxC,MAAM0K,YAGnBvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAIsB,YAAE,sCA9EVO,IAAMC,eAsGTC,cALS,SAAAvD,GAAK,MAAK,CAChCsK,IAAKQ,YAAsB9K,GAC3B6K,SAAU7K,EAAMwD,SAASqG,WAAWC,YARX,SAAArG,GAAQ,MAAK,CACtCkG,cAAe,WACblG,EAASkG,kBASEpG,CAGb6G,GChCaW,6MArEbC,mBAAqB,WACnB,YAAmC9F,IAA/BhF,EAAKC,MAAMsI,gBACS,CACpB3F,YAAE,oBACF5C,EAAKC,MAAMsI,gBAAgB3G,YAC3B,UACA5B,EAAKC,MAAMsI,gBAAgB1G,eAC3B2C,KAAK,KAGF,QAGTuG,aAAe,SAAAC,GACbhL,EAAKC,MAAMgL,YAAYD,MAGzBE,iBAAmB,WACjB,OAAQlL,EAAKC,MAAMkL,WACjB,IAAK,aACH,OAAO/J,EAAAC,EAAAC,cAAC8J,EAAD,MACT,IAAK,UACH,OAAOhK,EAAAC,EAAAC,cAAC+J,EAAD,MACT,IAAK,MACH,OAAOjK,EAAAC,EAAAC,cAACgK,EAAD,MACT,QACE,OAAOlK,EAAAC,EAAAC,cAAC8J,EAAD,gFAIJ,IAAAjD,EAAA1F,KAEP,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACiK,EAAD,CACE7J,QAASe,KAAKxC,MAAMsI,gBACpBpD,QAAS,kBAAMgD,EAAKlI,MAAMW,gBAE1BQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAMC,GAAG,KAAKrH,YAAE,mBAElBxB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAMC,GAAG,KAAKrH,YAAE,uBAElBxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUkB,KAAKqI,wBAGjC1J,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KAjBO,CAAC,aAAc,UAAW,OAkBzB/J,IAAI,SAAAuJ,GAAG,OACX5J,EAAAC,EAAAC,cAAA,MAAIQ,IAAKkJ,GACP5J,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CACEzI,UAAWyJ,IAAQ7C,EAAKlI,MAAMkL,UAAY,SAAW,GACrDxI,MAAOqI,EACPf,GAAG,IACH/E,QAAS,kBAAMiD,EAAK4C,aAAaC,KAEhCpI,YAAC,YAAAP,OAAa2I,SAKtBvI,KAAKyI,mBACN9J,EAAAC,EAAAC,cAACmK,EAAD,CAAOvK,SAAUuB,KAAKxC,MAAMiB,mBAhEdiC,IAAMC,wBCUbC,sBAdS,SAAAvD,GAAK,MAAK,CAChCoB,SAAUpB,EAAMwD,SAASpC,SACzBqH,gBAAiBmD,YAAmB5L,GACpCI,kBAAmBJ,EAAMwD,SAASpD,kBAClCiL,UAAWrL,EAAM6L,KAAKC,oBAEG,SAAArI,GAAQ,MAAK,CACtC3C,YAAa,WACX2C,EAAS3C,gBAEXqK,YAAa,SAAAE,GACX5H,EAASsI,YAAoBV,OAGlB9H,CAGbyI,irCCXIC,cACJ,SAAAA,EAAY9L,GAAO,IAAAD,EAAA,OAAA6F,OAAAC,EAAA,EAAAD,CAAApD,KAAAsJ,IACjB/L,EAAA6F,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAkG,GAAA9F,KAAAxD,KAAMxC,KACDH,MAAQ,CACXkM,aAAc,KACd1F,KAAM,IAJStG,oFASjByC,KAAKjC,SAAS,CACZwL,aAAcvJ,KAAKxC,MAAM+L,aACzB1F,KAAM7D,KAAKxC,MAAMqG,qDAIC2F,GACpB,OAAIxJ,KAAKxC,MAAMqG,OAAS2F,EAAU3F,sCAQlC,OACElF,EAAAC,EAAAC,cAAC4K,EAAA,SAAD,KACE9K,EAAAC,EAAAC,cAAC4K,EAAA,KAAD,CAAM5E,MAAO6E,EAAOnD,MAClB5H,EAAAC,EAAAC,cAAC4K,EAAA,MAAD,CACE5E,MAAO,CAAEkD,MAAO,OAAQ4B,OAAQ,OAChCC,IAAKC,EAAQ,OAGflL,EAAAC,EAAAC,cAAC4K,EAAA,KAAD,CAAM5E,MAAO6E,EAAOpD,OAAQwD,OAAK,IAEjCnL,EAAAC,EAAAC,cAAC4K,EAAA,KAAD,CAAM5E,MAAO6E,EAAOxJ,OAAQC,YAAE,6BAC9BxB,EAAAC,EAAAC,cAAC4K,EAAA,KAAD,CAAM5E,MAAO6E,EAAOK,QACjB5J,YAAE,yBADL,IACgCH,KAAKxC,MAAM+L,cAG3C5K,EAAAC,EAAAC,cAAC4K,EAAA,KAAD,CAAM5E,MAAO6E,EAAOM,MAAO7J,YAAE,4BAE7BxB,EAAAC,EAAAC,cAACoL,EAAD,KACEtL,EAAAC,EAAAC,cAACqL,EAAD,KACEvL,EAAAC,EAAAC,cAACsL,EAAD,KACExL,EAAAC,EAAAC,cAACuL,EAAD,KAAMjK,YAAE,mBAEVxB,EAAAC,EAAAC,cAACsL,EAAD,KACExL,EAAAC,EAAAC,cAACuL,EAAD,KAAMjK,YAAE,wBAEVxB,EAAAC,EAAAC,cAACwL,EAAD,KACE1L,EAAAC,EAAAC,cAACuL,EAAD,KAAMjK,YAAE,0BAEVxB,EAAAC,EAAAC,cAACyL,EAAD,KACE3L,EAAAC,EAAAC,cAACuL,EAAD,KAAMjK,YAAE,wBAEVxB,EAAAC,EAAAC,cAACsL,EAAD,KACExL,EAAAC,EAAAC,cAACuL,EAAD,KAAMjK,YAAE,sBAGXH,KAAKxC,MAAMqG,KACR7D,KAAKxC,MAAMqG,KAAK7E,IAAI,SAAAJ,GAAC,OACnBD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,CAAgB3B,IAAKT,EAAEsF,MACrBvF,EAAAC,EAAAC,cAACqL,EAAD,KACEvL,EAAAC,EAAAC,cAACsL,EAAD,KACExL,EAAAC,EAAAC,cAAC0L,EAAD,KAAK3L,EAAEkF,OAETnF,EAAAC,EAAAC,cAACsL,EAAD,KACExL,EAAAC,EAAAC,cAAC0L,EAAD,KAAK3L,EAAEoF,YAETrF,EAAAC,EAAAC,cAACwL,EAAD,KACE1L,EAAAC,EAAAC,cAAC0L,EAAD,KAAK3L,EAAEqF,cAETtF,EAAAC,EAAAC,cAACyL,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAD,KAAK3L,EAAEsF,OAETvF,EAAAC,EAAAC,cAACsL,EAAD,KACExL,EAAAC,EAAAC,cAAC0L,EAAD,KAAK3L,EAAEuF,aAKf,IAENxF,EAAAC,EAAAC,cAAC4K,EAAA,KAAD,CACE5E,MAAO6E,EAAOc,WACdC,OAAQ,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,WAAYG,EAAfD,EAAeC,WAAf,SAAA/K,OACH4K,EADG,OAAA5K,OACa+K,IAErBb,OAAK,aAzFWc,aAiG5BC,OAAKC,SAAS,CACZC,OAAQ,SACRnB,IAAK,sEAGP,IAAMK,EAAQe,IAAOC,KAAVC,KAILhB,EAAKc,IAAOC,KAAVE,KAIFhB,EAAKa,IAAOC,KAAVG,KAIFf,EAAMW,IAAOC,KAAVI,KAIHf,EAAMU,IAAOC,KAAVK,KAIHf,EAAKS,IAAOO,KAAVC,KAMFpB,EAAMY,IAAOO,KAAVE,KAOH/B,EAASgC,aAAWC,OAAO,CAC/BpF,KAAM,CACJqF,WAAY,GACZC,cAAe,GACfC,kBAAmB,IAErB5L,MAAO,CACL6L,SAAU,GACVC,UAAW,SACXC,WAAY,UAEdlC,OAAQ,CACNgC,SAAU,GACVC,UAAW,SACXE,aAAc,IAEhBC,SAAU,CACRJ,SAAU,GACVK,OAAQ,GACRH,WAAY,UAEdjC,KAAM,CACJoC,OAAQ,GACRL,SAAU,EACVC,UAAW,UACXC,WAAY,eAEdI,MAAO,CACLC,eAAgB,EAChBC,iBAAkB,GAEpBjG,OAAQ,CACNyF,SAAU,GACVG,aAAc,GACdF,UAAW,SACXlH,MAAO,QAET0F,WAAY,CACVgC,SAAU,WACVT,SAAU,GACVU,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPX,UAAW,SACXlH,MAAO,UAIIwE,aC7LTsD,EAAU,CACd,CAAEvN,IAAK,OAAQwN,MAAO1M,YAAE,kBACxB,CAAEd,IAAK,YAAawN,MAAO1M,YAAE,uBAC7B,CAAEd,IAAK,cAAewN,MAAO1M,YAAE,yBAC/B,CAAEd,IAAK,OAAQwN,MAAO1M,YAAE,uBACxB,CAAEd,IAAK,SAAUwN,MAAO1M,YAAE,qBAgEb2M,IA1DD,SAAAtP,GACZ,IAAMC,OACwB8E,IAA5B/E,EAAMC,kBAAkCD,EAAMC,kBAAoB,GAC9D+B,EAAI,GAAAI,OAPG,cAOUA,OAAP,GAAAA,OAAiBnC,KAC3BsP,EAAa,GAAAnN,OAAMJ,EAAKI,OAAL,GAAAA,OAPP,UAQZoN,EAAW,GAAApN,OAAMJ,EAAKI,OAAL,GAAAA,OAPP,UAQhB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYtB,EAAM0C,OAChC1C,EAAMyP,OACLtO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,yDACV0D,aAAW,eACXC,QAASjF,EAAMkF,SAEf/D,EAAAC,EAAAC,cAAA,YAAOrB,EAAM0P,UAGf,KACJvO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZtB,EAAM2P,SACLxO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACbqB,YAAE,8BACHxB,EAAAC,EAAAC,cAAC4K,EAAA,gBAAD,CACE2D,SACEzO,EAAAC,EAAAC,cAACwO,EAAD,CACExJ,KAAMrG,EAAMoG,WACZ2F,aAAc/L,EAAMC,oBAGxB6P,SAAUN,GAET,IATH,eAYArO,EAAAC,EAAAC,cAAC0O,EAAA,QAAD,CACE1J,KAAMrG,EAAMoG,WACZ4J,UAAW,IACXZ,QAASA,EACTa,SAAUV,GAJZ,WAUF,QAIVpO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAActB,EAAMmF,oICrD1B+K,EAfM,SAAAlQ,GAAK,OACxBmB,EAAAC,EAAAC,cAAA,MAAAuE,OAAAuK,OAAA,CAAK5F,MAAO,GAAI4B,OAAQ,IAAQnM,GAC9BmB,EAAAC,EAAAC,cAAA,KAAG+O,UAAU,iBAAiBC,KAAK,OAAOC,SAAS,WACjDnP,EAAAC,EAAAC,cAAA,WAASgP,KAAK,UAAUE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpDvP,EAAAC,EAAAC,cAAA,KAAGiP,SAAS,UAAUK,OAAO,WAC3BxP,EAAAC,EAAAC,cAAA,QAAMuP,EAAE,kHACRzP,EAAAC,EAAAC,cAAA,QACEuP,EAAE,gPACFP,KAAK,gBCQTQ,6MAKJhR,MAAQ,CACNiR,aAAc,4EAEP,IAAA5I,EAAA1F,KACHuO,EACFC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAD,MACAD,EAAA,qBAAK1P,UAAU,cAAf,0BAGAwH,EACFkI,EAAA,qBAAK1P,UAAU,wBACb0P,EAAA,sBAAM1P,UAAU,4BACd0P,EAAA,cAACE,EAAA,UAAD,CACE5P,UAAU,kBACVS,KAAK,SACLoP,QAAS,SAAAxJ,GAAC,OAAIO,EAAK3H,SAAS,CAAEuQ,aAAcnJ,EAAEnH,OAAOC,WAEvDuQ,EAAA,uBAAO1P,UAAU,iBAAiBa,QAAQ,SACxC6O,EAAA,8CAKJI,EAAgB5O,KAAKxC,MAAMS,MAAQ+B,KAAKxC,MAAMS,MAAMS,OAAS,EAC7DmQ,EAAM,aAAAjP,OAAgBgP,EAAhB,gBAENE,EADO9O,KAAKxC,MAAM4I,KACIpH,IAAI,SAAC+P,EAAKC,GAAN,OAC5BR,EAAA,cAACjK,EAAA,OAAD,CACE0K,gBAAgB,WAChB3I,OAAQyI,EAAIzI,OACZ4I,UAAU,EACV7J,OAAQ0J,EAAI1J,OACZhG,IAAK0P,EAAI1I,MACTA,MAAO0I,EAAI1I,MACXE,KAAMwI,EAAIxI,KACVC,cAAeuI,EAAIvI,cACnB2I,UAAWJ,EAAII,UACf1I,eAAgBsI,EAAItI,eACpB2I,gBAAgB,aAGpB,OACEZ,EAAA,cAACa,EAAA,UAAD,CACEC,eAAe,gBACfhJ,OAAQA,EACRrI,MAAO+B,KAAKxC,MAAMS,MAClBsR,kBAAkB,EAClBC,WAAW,EACX7J,KAAM,GACN8J,IAAKzP,KAAKxC,MAAMyI,UAChBqI,aAActO,KAAK3C,MAAMiR,aACzBoB,mBAAoB,CAAC,GAAI,GAAI,IAC7BC,oBAAoB,EACpBC,iBAAiB,EACjB5J,aAAchG,KAAKxC,MAAMwI,aACzBG,iBAAkBnG,KAAKxC,MAAM2I,iBAC7B0I,OAAQA,EACRgB,aAActB,GAEbO,UAjEwBpO,aAA3B2N,EACGyB,aAAe,CACpB1J,KAAM,GACND,iBAAkB,OAoEPkI,2TCzFMvL,sCACZiN,aAAe,CACpB3O,SAAU,EACVC,gBAAiB,IACjBC,cAAe,GAJEwB,EAOZC,sWACFD,EAAqBiN,cACxB3O,SAAU,EACVa,kBAAkB,IAVDa,EAYZ2B,eAAiB,CACtBuL,UAAW,UACXtL,SAAU,aACVuL,KAAM,WACNhN,SAAU,gNCfP,IAAMiN,QAAqBlF,EAAOmF,IAAIC,MAAM,SAAA5S,GAAK,MAAK,CAC3DsB,UAAS,uFAAAc,OACPpC,EAAM4C,KAAO,aAAe,MAFE4K,CAAHE,KCmBzBmF,EAAmB,SAAC7S,GAAD,OACvBgR,EAAA,cAAAA,EAAA,cACGhR,EAAM8S,cACL9B,EAAA,wBACE1P,UAAU,8BACVyR,YAAU,SACV9N,QAASjF,EAAM8C,YACfkQ,SAAUhT,EAAMiT,mBAEhBjC,EAAA,0BAAOhR,EAAMkT,cAGhBlT,EAAMgD,gBACLgO,EAAA,wBACE1P,UAAU,8BACVyR,YAAU,OACV9N,QAASjF,EAAM+C,eACfiQ,SAAUhT,EAAMiD,qBAEhB+N,EAAA,0BAAOhR,EAAMmT,kBAOf1Q,EAAY,SAACzC,GAAD,OAChBgR,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACoC,EAAA,EAAD,CAAUxQ,KAAM5C,EAAM4C,KAAMyQ,QAASrT,EAAM8C,cAC3CkO,EAAA,cAAC0B,EAAD,CAAoB9P,KAAM5C,EAAM4C,MAC9BoO,EAAA,qBAAK1P,UAAU,iBACb0P,EAAA,qBAAK1P,UAAU,gBACb0P,EAAA,wBACE1P,UAAU,oBACVgS,eAAa,QACbrO,QAASjF,EAAM8C,aAHjB,QAOAkO,EAAA,wBAAKhR,EAAM0C,QAEZ1C,EAAMuT,OAASvT,EAAMuT,QACtBvC,EAAA,qBAAK1P,UAAU,cAActB,EAAMmF,UAlBtB,SAACnF,GAAD,OACnBA,EAAM8S,cAAgB9S,EAAMgD,eAkBrBwQ,CAAaxT,IACZgR,EAAA,qBAAK1P,UAAU,gBACb0P,EAAA,mBAAG1P,UAAU,iBACb0P,EAAA,cAACyC,EAAqBzT,QAQlCyC,EAAU6P,aAAe,CACvBa,cAAexQ,YAAE,qCACjBuQ,YAAavQ,YAAE,mCACfM,qBAAqB,EACrBgQ,mBAAmB,GAGNxQ,4GC9EFgF,EAAb,SAAAiM,GACE,SAAAjM,IAAc,IAAA1H,EAAA,OAAA6F,OAAA+N,EAAA,EAAA/N,CAAApD,KAAAiF,IACZ1H,EAAA6F,OAAAgO,EAAA,EAAAhO,CAAApD,KAAAoD,OAAAiO,EAAA,EAAAjO,CAAA6B,GAAAzB,KAAAxD,QAQFkF,iBAAmB,SAAAC,GACjB5H,EAAKQ,SAAS,CAAEuT,cAAenM,EAAElH,QACjCV,EAAKC,MAAM+T,aAAa,CAAED,cAAenM,EAAElH,SAT3CV,EAAKF,MAAQ,CACXmU,MAAO,KACPpR,MAAM,EACNkR,cAAe,MALL/T,EADhB,OAAA6F,OAAAqO,EAAA,EAAArO,CAAA6B,EAAAiM,GAAA9N,OAAAsO,EAAA,EAAAtO,CAAA6B,EAAA,EAAA5F,IAAA,SAAApB,MAAA,WAcW,IAAAyH,EAAA1F,KACH2R,EAAa,GAAA/R,OAAMI,KAAK3C,MAAM+C,KAAO,UAAY,IACrD,OACEwR,EAAAhT,EAAAC,cAAA+S,EAAAhT,EAAAoC,SAAA,KACE4Q,EAAAhT,EAAAC,cAAA,QACEC,UAAU,kBACV2D,QAAS,WACPiD,EAAK3H,SAAS,CAAEqC,MAAOsF,EAAKrI,MAAM+C,UAGtCwR,EAAAhT,EAAAC,cAAA,WACE+S,EAAAhT,EAAAC,cAACgT,EAAA,SAAD,CACEC,eAAe,EACfC,WAAW,WACXjT,UAAW6S,EACX1T,MAAO+B,KAAK3C,MAAMmU,MAClB9R,SAAU,SAAAyF,GACRO,EAAK3H,SAAS,CAAEyT,MAAOrM,EAAElH,QACzByH,EAAKlI,MAAM0H,iBAAiBC,IAE9B6M,cAAc,WACdC,UAAU,EACVjN,QAAShF,KAAKxC,MAAMwH,QACpBkN,eAAe,UArC3BjN,EAAA,CAAkC2F,aA6CnB3F,wCChDfkN,EAAA/D,EAAAgE,EAAA,sBAAA1L,IAAA,IAAA2L,EAAAF,EAAA,KAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,KAEaM,EAAiB,SAACxP,EAAU9B,GACvC,OAAK8B,EACEC,IAAOD,GAAU9B,OAAOA,GADT,MAIXuF,EAAa,SAACzI,EAAOoH,GAShC,OARApH,EAAQwU,EAAexU,EAAO6E,IAAqB2B,eAAeC,UACpDW,EAAOrG,IAAI,SAAAwH,GAKvB,OAJAA,EAAgBiM,EACdjM,EACA1D,IAAqB2B,eAAeC,YAIzBgO,KAAK,SAAAC,GAAM,OAAI1U,EAAM2U,WAAWD,wCChBjD,IAAAE,EAAAV,EAAA,GAAAW,EAAAX,EAAAI,EAAAM,GAQeE,IANK,SAAAvV,GAAK,OACvBsV,EAAAlU,EAAAC,cAAA,OAAKC,UAAU,iBACbgU,EAAAlU,EAAAC,cAAA,UAAKrB,EAAMmF,iCCJfqQ,EAAAC,QAAiBd,EAAAe,EAAuB","file":"static/js/8.0f50cefa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { t } from '../../../i18n';\r\nimport {\r\n  selectAccount,\r\n  toggleModal,\r\n} from '../../../redux/accounts/accounts.actions';\r\nimport { connect } from 'react-redux';\r\nimport FormModal from '../../../components/Ui/CustomModel/FormModal';\r\n\r\nclass AccountsModal extends React.PureComponent {\r\n  state = { tempSelectedAccountId: this.props.selectedAccountId };\r\n\r\n  _isChecked = clientAccountId =>\r\n    this.state.tempSelectedAccountId &&\r\n    clientAccountId.toString() === this.state.tempSelectedAccountId.toString();\r\n\r\n  _handleAccountChange = changeEvent => {\r\n    this.setState({\r\n      tempSelectedAccountId: changeEvent.target.value,\r\n    });\r\n  };\r\n\r\n  _toggleModal = () => {\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  _handleFormSubmit = formSubmitEvent => {\r\n    formSubmitEvent.preventDefault();\r\n    this.props.selectAccount(this.state.tempSelectedAccountId);\r\n    this._toggleModal();\r\n  };\r\n\r\n  _renderAccounts = () => {\r\n    if (this.props.accounts.length > 0) {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <div className=\"col-sm-12\">\r\n            <form onSubmit={this._handleFormSubmit}>\r\n              {this.props.accounts.map((account, index) => {\r\n                const { clientAccountId, accountName, accountNumber } = account;\r\n                return (\r\n                  <div className=\"bcp-radio bcp-radio-color inline\" key={index}>\r\n                    <input\r\n                      id={clientAccountId}\r\n                      type=\"radio\"\r\n                      name=\"rad9\"\r\n                      value={clientAccountId}\r\n                      checked={this._isChecked(clientAccountId)}\r\n                      onChange={this._handleAccountChange}\r\n                    />\r\n                    <label htmlFor={clientAccountId}>\r\n                      {`${accountName} n° ${accountNumber}`}\r\n                    </label>\r\n                  </div>\r\n                );\r\n              })}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedAccountId !== this.props.selectedAccountId) {\r\n      this.setState({ tempSelectedAccountId: this.props.selectedAccountId });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormModal\r\n        title={t('Accounts:chooseAccount')}\r\n        show={this.props.modalShow}\r\n        handleClose={this._toggleModal}\r\n        handleValidate={this._handleFormSubmit}\r\n        hasValidateBtn\r\n        validateBtnDisabled={this.state.tempSelectedAccountId === null}\r\n      >\r\n        {this._renderAccounts()}\r\n      </FormModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectAccount: selectedAccountId => {\r\n    dispatch(selectAccount(selectedAccountId));\r\n  },\r\n  toggleModal: () => {\r\n    dispatch(toggleModal());\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  modalShow: state.Accounts.modalShow,\r\n  selectedAccountId: state.Accounts.selectedAccountId,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(AccountsModal);\r\n","//@flow\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  currency: string,\r\n  positive: boolean,\r\n  negative: boolean,\r\n  number: string | number,\r\n  format: {\r\n    decimals: number,\r\n    groupingBlock: number,\r\n    groupsSeparator: string,\r\n    currencyIsPrefix?: boolean,\r\n  },\r\n};\r\n\r\nconst formatNumber = (props: Props) => {\r\n  if (!props.number) return null;\r\n  const { decimals, groupsSeparator, groupingBlock } = props.format;\r\n  const regExp = new RegExp(`(\\\\d)(?=(\\\\d{${groupingBlock}})+(?!\\\\d))`, 'g');\r\n  const fixedNumberParts = parseFloat(props.number)\r\n    .toFixed(decimals)\r\n    .toString()\r\n    .split('.');\r\n  fixedNumberParts[0] = fixedNumberParts[0].replace(\r\n    regExp,\r\n    '$1'.concat(groupsSeparator),\r\n  );\r\n  let formattedNumber = fixedNumberParts.join('.');\r\n  if (props.currency) {\r\n    if (props.format.currencyIsPrefix)\r\n      formattedNumber = props.currency.concat(` ${formattedNumber}`);\r\n    else {\r\n      formattedNumber = formattedNumber.concat(` ${props.currency}`);\r\n    }\r\n  }\r\n  if (props.positive) {\r\n    formattedNumber = '+'.concat(formattedNumber);\r\n  } else if (props.negative) formattedNumber = '-'.concat(formattedNumber);\r\n  return formattedNumber;\r\n};\r\n\r\nconst FormattedNumber = (props: Props) => <>{formatNumber(props)}</>;\r\n\r\nexport default FormattedNumber;\r\n","import React from 'react';\r\nimport { t } from '../../i18n';\r\nimport FormattedNumber from '../FormattedNumber/FormattedNumber';\r\nimport FormatsConfiguration from '../../utils/FormatsConfiguration';\r\n\r\nconst showAccount = props => {\r\n  let account = { accountName: '', accountNumber: '', bookBalance: '' };\r\n  if (props.account !== undefined) {\r\n    account = props.account;\r\n  }\r\n  return (\r\n    <div className=\"page-head\">\r\n      <div className=\"page-head-compte\">\r\n        <div className=\"left-col\">\r\n          <div className=\"left__top\">\r\n            <h2 className=\"page-head-title\">\r\n              {account.accountName}\r\n              <span>(n° {account.accountNumber})</span>\r\n            </h2>\r\n            <button\r\n              className=\"btn btn-space btn-primary md-trigger popin_btn\"\r\n              type=\"button\"\r\n              data-modal=\"colored-primary\"\r\n              onClick={props.onclick}\r\n            />\r\n          </div>\r\n          <ol className=\"breadcrumb page-head-nav\">{props.children}</ol>\r\n        </div>\r\n        <div className=\"right-col solde-info\">\r\n          <div className=\"solde-top\">\r\n            <span className=\"lbl\">{t('Components:availableBalance')}</span>\r\n            <span className=\"price\">\r\n              <FormattedNumber\r\n                number={account.availableBalance}\r\n                format={FormatsConfiguration.AmountFormat}\r\n                currency={t('Components:currency')}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default showAccount;\r\n","//@flow\r\nimport React from 'react';\r\nimport moment from 'moment';\r\n\r\ntype Props = {\r\n  className: string,\r\n  dateTime: string,\r\n  format: string,\r\n};\r\n\r\nconst formatDateTime = (dateTime, format) => {\r\n  if (!dateTime) return null;\r\n  return moment(dateTime).format(format);\r\n};\r\n\r\nconst FormatDateComponent = (props: Props) => (\r\n  <div className={props.className}>\r\n    {formatDateTime(props.dateTime, props.format)}\r\n  </div>\r\n);\r\n\r\nexport default FormatDateComponent;\r\n","import React from 'react';\r\nimport Panel from '../../../components/Panel/Panel';\r\nimport { t } from '../../../i18n';\r\nimport { connect } from 'react-redux';\r\nimport { getOperations } from '../../../redux/operations/operations.actions';\r\nimport FormatDate from '../../../components/FormattedDate/FormattedDate';\r\nimport FormattedNumber from '../../../components/FormattedNumber/FormattedNumber';\r\nimport FormatsConfiguration from '../../../utils/FormatsConfiguration';\r\nimport OperationTable from '../../../components/DataTable/CustomDataTable';\r\nimport DateCalender from '../../../components/DateCalendar/DateCalendar';\r\nimport { dateFilter } from '../../../utils/DateUtils';\r\n\r\nclass Operations extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    let maxDate = new Date();\r\n    this.state = {\r\n      loading: true,\r\n      totalRecords: 0,\r\n      maxDate: maxDate,\r\n    };\r\n  }\r\n  _dateChangeHandler = () => {\r\n    this.forceUpdate();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getOperations();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedAccountId !== this.props.selectedAccountId)\r\n      this.props.getOperations();\r\n  }\r\n  _buildDataTableRows = () =>\r\n    this.props.operations.map(data => {\r\n      const { date, valueDate, description, code, amount, sign } = data;\r\n      return {\r\n        date: date,\r\n        dateValue: valueDate,\r\n        description: description,\r\n        code: code,\r\n        amount: amount,\r\n        sign: sign,\r\n      };\r\n    });\r\n  _dateTemplate = (rowData, column) => {\r\n    if (rowData.sign === 'C') {\r\n      return (\r\n        <FormatDate\r\n          dateTime={rowData.date}\r\n          format={FormatsConfiguration.DateTimeFormat.fullDate}\r\n          className=\"positif_transaction\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <FormatDate\r\n          dateTime={rowData.date}\r\n          format={FormatsConfiguration.DateTimeFormat.fullDate}\r\n          className=\"negative_transaction\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  _dateValueTemplate = (rowData, column) => (\r\n    <FormatDate\r\n      dateTime={rowData.dateValue}\r\n      format={FormatsConfiguration.DateTimeFormat.fullDate}\r\n    />\r\n  );\r\n  _amountTemplate = (rowData, column) => {\r\n    if (rowData.sign === 'C') {\r\n      return (\r\n        <span style={{ color: 'green' }}>\r\n          <FormattedNumber\r\n            number={rowData.amount}\r\n            positive\r\n            format={FormatsConfiguration.AmountFormat}\r\n          />\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <span style={{ color: 'red' }}>\r\n          <FormattedNumber\r\n            number={rowData.amount}\r\n            negative\r\n            format={FormatsConfiguration.AmountFormat}\r\n          />\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n  _dateCalendarComponent = maxDate => (\r\n    <DateCalender\r\n      maxDate={maxDate}\r\n      handleDateChange={e => {\r\n        this.dt.filter(e.value, 'date', 'custom');\r\n        this._dateChangeHandler();\r\n      }}\r\n    />\r\n  );\r\n  render() {\r\n    let rows = this._buildDataTableRows();\r\n    return (\r\n      <div className=\"page-container_inner\">\r\n        <div className=\"main-content \">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12\">\r\n              <Panel\r\n                title={t('Accounts:operationsHistory')}\r\n                selectedAccountNumber={this.props.selectedAccount}\r\n              >\r\n                <OperationTable\r\n                  value={rows}\r\n                  onRowReorder={e => (rows = e.value)}\r\n                  reference={el => (this.dt = el)}\r\n                  columnResizeMode=\"fit\"\r\n                  cols={[\r\n                    {\r\n                      field: 'date',\r\n                      header: t('Accounts:date'),\r\n                      body: this._dateTemplate,\r\n                      filter: true,\r\n                      filterElement: this._dateCalendarComponent(\r\n                        this.state.maxDate,\r\n                      ),\r\n                      filterFunction: dateFilter,\r\n                    },\r\n                    {\r\n                      field: 'dateValue',\r\n                      header: t('Accounts:dateValue'),\r\n                      body: this._dateValueTemplate,\r\n                      filter: true,\r\n                      filterElement: this._dateCalendarComponent(\r\n                        this.state.maxDate,\r\n                      ),\r\n                      filterFunction: dateFilter,\r\n                    },\r\n                    {\r\n                      field: 'description',\r\n                      header: t('Accounts:description'),\r\n                    },\r\n                    {\r\n                      field: 'code',\r\n                      header: t('Accounts:reference'),\r\n                    },\r\n                    {\r\n                      field: 'amount',\r\n                      header: t('Accounts:amount', {\r\n                        currency: t('Components:currency'),\r\n                      }),\r\n\r\n                      body: this._amountTemplate,\r\n                    },\r\n                  ]}\r\n                />\r\n              </Panel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getOperations: accountId => {\r\n    dispatch(getOperations(accountId));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  operations: state.Operations.operations,\r\n  selectedAccountId: state.Accounts.selectedAccountId,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Operations);\r\n","import { actionCreator } from '../../utils/generators';\r\nimport OperationsActionTypes from './operations.types';\r\n\r\nexport const getOperations = () => ({\r\n  type: actionCreator('req', OperationsActionTypes.GET_OPERATIONS),\r\n});\r\n","import React from 'react';\r\nimport { getSignaletic } from '../../../redux/accounts/accounts.actions';\r\nimport { connect } from 'react-redux';\r\nimport { t } from '../../../i18n';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signaletic extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.getSignaletic();\r\n  }\r\n\r\n  render() {\r\n    let { NomPrenom, PieceId, Tel, Agec } = this.props.signaletic;\r\n    return (\r\n      <div className=\"page-container_inner\">\r\n        <div className=\"main-content container-fluid\">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading panel-heading-divider\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      {t('Accounts:signaleticForm')}\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"download_links dropdown_area float_right\">\r\n                        <span className=\"purple_download\">\r\n                          {t('Accounts:download')} :&nbsp;\r\n                          <Link to=\"#\">PDF</Link>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <div className=\"detail-compte\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 col-left\">\r\n                        <ul>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:fullName')}\r\n                            </span>\r\n                            <span className=\"text\">{NomPrenom}</span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:idType')}\r\n                            </span>\r\n                            <span className=\"text\">{t('Accounts:CIN')}</span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:idNumber')}\r\n                            </span>\r\n                            <span className=\"text\">{PieceId}</span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:resident')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:agency')}\r\n                            </span>\r\n                            <span className=\"text\">{Agec}</span>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-right\">\r\n                        <ul>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:address')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:postalCode')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">{t('Accounts:city')}</span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:country')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:phoneNumber')}\r\n                            </span>\r\n                            <span className=\"text\">{Tel[0]}</span>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSignaletic: () => {\r\n    dispatch(getSignaletic());\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  signaletic: state.Accounts.signaletic,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Signaletic);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { t } from '../../../i18n';\r\nimport { Link } from 'react-router-dom';\r\nimport { getSelectedAccountRIB } from '../../../redux/accounts/accounts.selectors';\r\nimport { getSignaletic } from '../../../redux/accounts/accounts.actions';\r\n\r\nclass RIB extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.getSignaletic();\r\n  }\r\n\r\n  render() {\r\n    let { bankCode, agencyCode, accountNumber, ribKey } = this.props.rib;\r\n    return (\r\n      <div className=\"page-container_inner\">\r\n        <div className=\"main-content container-fluid\">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading panel-heading-divider\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">{t('Accounts:rib')}</div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"download_links dropdown_area float_right\">\r\n                        <span className=\"purple_download\">\r\n                          {t('Accounts:download')} :&nbsp;\r\n                          <Link to=\"#\">PDF</Link>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"panel-body rib_page\">\r\n                  <div className=\"rib_content\">\r\n                    <div className=\"releve_bancaire\">\r\n                      <h3>{t('Accounts:ribTitle')}</h3>\r\n                    </div>\r\n                    <div className=\"rib_top\">\r\n                      <div className=\"left_rib_top\">\r\n                        <table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th width=\"23%\">{t('Accounts:bankCode')}</th>\r\n                              <th width=\"15%\">{t('Accounts:agencyCode')}</th>\r\n                              <th>{t('Accounts:accountNumber')}</th>\r\n                              <th width=\"12%\" align=\"center\">\r\n                                {t('Accounts:ribKey')}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>{bankCode}</td>\r\n                              <td>{agencyCode}</td>\r\n                              <td>{accountNumber}</td>\r\n                              <td>{ribKey}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td colSpan=\"4\">&nbsp;</td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <tfoot>\r\n                            <tr>\r\n                              <td colSpan=\"2\">{t('Accounts:swiftCode')}</td>\r\n                              <td colSpan=\"2\">Y</td>\r\n                            </tr>\r\n                          </tfoot>\r\n                        </table>\r\n                      </div>\r\n                      <div className=\"right_rib_top\">\r\n                        <h3>{t('Accounts:agency')} X</h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"rib_bot\">\r\n                      <div className=\"left_rib_bot\">\r\n                        <h3>{t('Accounts:domiciliation')}</h3>\r\n                        <p>Y</p>\r\n                      </div>\r\n                      <div className=\"right_rib_bot\">\r\n                        <h3>{t('Accounts:accountOwner')}</h3>\r\n                        <p>{this.props.fullName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"rib_remarque\">\r\n                      <p>{t('Accounts:ribRemark')}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSignaletic: () => {\r\n    dispatch(getSignaletic());\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  rib: getSelectedAccountRIB(state),\r\n  fullName: state.Accounts.signaletic.NomPrenom,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RIB);\r\n","import React from 'react';\r\nimport Modal from './AccountsModal';\r\nimport SelectedAccount from '../../../components/ShowAccount/ShowAccount';\r\nimport HeadNav from '../../../components/PageHeadNav/PageHeadNav';\r\nimport { Link } from 'react-router-dom';\r\nimport { t } from '../../../i18n';\r\nimport Operations from './Operations';\r\nimport Signaletic from './Signaletic';\r\nimport RIB from './RIB';\r\n\r\nclass Feature extends React.PureComponent {\r\n  _renderAccountName = () => {\r\n    if (this.props.selectedAccount !== undefined) {\r\n      let accountToString = [\r\n        t('Accounts:account'),\r\n        this.props.selectedAccount.accountName,\r\n        'N° :',\r\n        this.props.selectedAccount.accountNumber,\r\n      ].join(' ');\r\n      return accountToString;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  _activateTab = tab => {\r\n    this.props.activateTab(tab);\r\n  };\r\n\r\n  _renderActiveTab = () => {\r\n    switch (this.props.activeTab) {\r\n      case 'operations':\r\n        return <Operations />;\r\n      case 'details':\r\n        return <Signaletic />;\r\n      case 'rib':\r\n        return <RIB />;\r\n      default:\r\n        return <Operations />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let tabs = ['operations', 'details', 'rib'];\r\n    return (\r\n      <div className=\"page-content\">\r\n        <div className=\"page-content_side\">\r\n          <SelectedAccount\r\n            account={this.props.selectedAccount}\r\n            onclick={() => this.props.toggleModal()}\r\n          >\r\n            <li>\r\n              <Link to=\"#\">{t('Accounts:home')}</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">{t('Accounts:accounts')}</Link>\r\n            </li>\r\n            <li className=\"active\">{this._renderAccountName()}</li>\r\n          </SelectedAccount>\r\n        </div>\r\n        <HeadNav>\r\n          {tabs.map(tab => (\r\n            <li key={tab}>\r\n              <Link\r\n                className={tab === this.props.activeTab ? 'active' : ''}\r\n                title={tab}\r\n                to=\"#\"\r\n                onClick={() => this._activateTab(tab)}\r\n              >\r\n                {t(`Accounts:${tab}`)}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </HeadNav>\r\n        {this._renderActiveTab()}\r\n        <Modal accounts={this.props.accounts} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feature;\r\n","import { connect } from 'react-redux';\r\nimport Account from './components/feature';\r\nimport { getSelectedAccount } from '../../redux/accounts/accounts.selectors';\r\nimport { toggleModal } from '../../redux/accounts/accounts.actions';\r\nimport { activateAccountsTab } from 'redux/menu/menu.actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  accounts: state.Accounts.accounts,\r\n  selectedAccount: getSelectedAccount(state),\r\n  selectedAccountId: state.Accounts.selectedAccountId,\r\n  activeTab: state.Menu.accountsActiveTab,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleModal: () => {\r\n    dispatch(toggleModal());\r\n  },\r\n  activateTab: activeTab => {\r\n    dispatch(activateAccountsTab(activeTab));\r\n  },\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Account);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Image,\r\n  Font,\r\n  Page,\r\n  Text,\r\n  Document,\r\n  StyleSheet,\r\n} from '@react-pdf/renderer';\r\nimport styled from '@react-pdf/styled-components';\r\nimport { t } from '../../i18n';\r\n\r\nclass bankStatement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numeroCompte: null,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      numeroCompte: this.props.numeroCompte,\r\n      data: this.props.data,\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.data === nextProps.data) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Document>\r\n        <Page style={styles.body}>\r\n          <Image\r\n            style={{ width: '20vw', height: '9vh' }}\r\n            src={require('./../../assets/img/logos/logo.PNG')}\r\n          />\r\n\r\n          <Text style={styles.header} fixed></Text>\r\n\r\n          <Text style={styles.title}>{t('Accounts:bankStatement30')}</Text>\r\n          <Text style={styles.author}>\r\n            {t('Accounts:accountNumer')} {this.props.numeroCompte}\r\n          </Text>\r\n\r\n          <Text style={styles.text}>{t('Accounts:lastOperations')}</Text>\r\n\r\n          <Table>\r\n            <TR>\r\n              <TD>\r\n                <TT1>{t('Accounts:date')}</TT1>\r\n              </TD>\r\n              <TD>\r\n                <TT1>{t('Accounts:dateValue')}</TT1>\r\n              </TD>\r\n              <TD1>\r\n                <TT1>{t('Accounts:description')}</TT1>\r\n              </TD1>\r\n              <TD3>\r\n                <TT1>{t('Accounts:reference')}</TT1>\r\n              </TD3>\r\n              <TD>\r\n                <TT1>{t('Accounts:amount')}</TT1>\r\n              </TD>\r\n            </TR>\r\n            {this.props.data\r\n              ? this.props.data.map(a => (\r\n                  <React.Fragment key={a.code}>\r\n                    <TR>\r\n                      <TD>\r\n                        <TT>{a.date}</TT>\r\n                      </TD>\r\n                      <TD>\r\n                        <TT>{a.valueDate}</TT>\r\n                      </TD>\r\n                      <TD1>\r\n                        <TT>{a.description}</TT>\r\n                      </TD1>\r\n                      <TD3>\r\n                        <TT>{a.code}</TT>\r\n                      </TD3>\r\n                      <TD>\r\n                        <TT>{a.amount}</TT>\r\n                      </TD>\r\n                    </TR>\r\n                  </React.Fragment>\r\n                ))\r\n              : ''}\r\n          </Table>\r\n          <Text\r\n            style={styles.pageNumber}\r\n            render={({ pageNumber, totalPages }) =>\r\n              `${pageNumber} / ${totalPages}`\r\n            }\r\n            fixed\r\n          />\r\n        </Page>\r\n      </Document>\r\n    );\r\n  }\r\n}\r\n\r\nFont.register({\r\n  family: 'Oswald',\r\n  src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf',\r\n});\r\n\r\nconst Table = styled.View`\r\ndisplay: table; width:auto; borderStyle: solid; borderWidth: 1; borderRightWidth: 0; borderBottomWidth: 0'\r\n`;\r\n\r\nconst TR = styled.View`\r\nflexDirection: row; margin:auto;'\r\n`;\r\n\r\nconst TD = styled.View`\r\nwidth: 13%; borderStyle: solid; borderWidth: 1; borderLeftWidth: 0; borderTopWidth: 0;'\r\n`;\r\n\r\nconst TD1 = styled.View`\r\nwidth: 46%; borderStyle: solid; borderWidth: 1; borderLeftWidth: 0; borderTopWidth: 0;'\r\n`;\r\n\r\nconst TD3 = styled.View`\r\nwidth: 15%; borderStyle: solid; borderWidth: 1; borderLeftWidth: 0; borderTopWidth: 0;'\r\n`;\r\n\r\nconst TT = styled.Text`\r\n  margin: 10px;\r\n  font-size: 9px;\r\n  font-family: 'Helvetica';\r\n`;\r\n\r\nconst TT1 = styled.Text`\r\n  margin: 10px;\r\n  font-size: 10px;\r\n  font-family: 'Helvetica';\r\n  ont-weight: bold;\r\n`;\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n    fontFamily: 'Oswald',\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n    fontFamily: 'Oswald',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 8,\r\n    textAlign: 'justify',\r\n    fontFamily: 'Times-Roman',\r\n  },\r\n  image: {\r\n    marginVertical: 0,\r\n    marginHorizontal: 0,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nexport default bankStatement;\r\n","import React from 'react';\r\nimport { t } from '../../i18n';\r\nimport ListeOperationsPdf from '../../pdf/account/bankStatement';\r\nimport { CSVLink } from 'react-csv';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\n\r\nconst headers = [\r\n  { key: 'date', label: t('Accounts:date') },\r\n  { key: 'valueDate', label: t('Accounts:dateValue') },\r\n  { key: 'description', label: t('Accounts:description') },\r\n  { key: 'code', label: t('Accounts:reference') },\r\n  { key: 'amount', label: t('Accounts:amount') },\r\n];\r\nconst prefix = 'Historique_';\r\nconst suffixExcel = '.csv';\r\nconst suffixPDF = '.pdf';\r\n\r\nconst panel = props => {\r\n  const selectedAccountId =\r\n    props.selectedAccountId !== undefined ? props.selectedAccountId : '';\r\n  const name = `${prefix.concat(`${selectedAccountId}`)}`;\r\n  const filenameExcel = `${name.concat(`${suffixExcel}`)}`;\r\n  const filenamePdf = `${name.concat(`${suffixPDF}`)}`;\r\n  return (\r\n    <div className=\"panel panel-default\">\r\n      <div className=\"panel-heading panel-heading-divider\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">{props.title}</div>\r\n          {props.button ? (\r\n            <div className=\"col-md-6 text-right\">\r\n              <button\r\n                className=\"btn btn-space btn-default md-trigger addform popin_btn\"\r\n                data-modal=\"ajoutfavoris\"\r\n                onClick={props.onclick}\r\n              >\r\n                <span>{props.btntxt}</span>\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"col-md-6\">\r\n            {props.download ? (\r\n              <div className=\"download_links dropdown_area float_right\">\r\n                <span className=\"purple_download\">\r\n                  {t('Components:downloadHistory')}\r\n                  <PDFDownloadLink\r\n                    document={\r\n                      <ListeOperationsPdf\r\n                        data={props.operations}\r\n                        numeroCompte={props.selectedAccountId}\r\n                      />\r\n                    }\r\n                    fileName={filenamePdf}\r\n                  >\r\n                    {' '}\r\n                    PDF&nbsp;&nbsp;\r\n                  </PDFDownloadLink>\r\n                  <CSVLink\r\n                    data={props.operations}\r\n                    separator={';'}\r\n                    headers={headers}\r\n                    filename={filenameExcel}\r\n                  >\r\n                    EXCEL\r\n                  </CSVLink>\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"panel-body\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default panel;\r\n","import React from 'react';\r\n\r\nconst SvgComponent = props => (\r\n  <svg width={64} height={41} {...props}>\r\n    <g transform=\"translate(0 1)\" fill=\"none\" fillRule=\"evenodd\">\r\n      <ellipse fill=\"#F5F5F5\" cx={32} cy={33} rx={32} ry={7} />\r\n      <g fillRule=\"nonzero\" stroke=\"#D9D9D9\">\r\n        <path d=\"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z\" />\r\n        <path\r\n          d=\"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z\"\r\n          fill=\"#FAFAFA\"\r\n        />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default SvgComponent;\r\n","//@flow\r\n\r\nimport * as React from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Column } from 'primereact/column';\r\nimport NoDataSvg from '../../assets/SvgComponents/NoDataSvg/NoDataSvg';\r\n\r\ntype Props = {\r\n  value: [],\r\n  cols: [],\r\n  reference: Function,\r\n  onRowReorder: Function,\r\n  columnResizeMode: string,\r\n};\r\ntype State = {\r\n  globalFilter: string,\r\n};\r\nclass OurDataTableCustom extends React.Component<Props, State> {\r\n  static defaultProps = {\r\n    cols: [],\r\n    columnResizeMode: 'fit',\r\n  };\r\n  state = {\r\n    globalFilter: '',\r\n  };\r\n  render() {\r\n    let NoDataMessage = (\r\n      <>\r\n        <NoDataSvg />\r\n        <div className=\"text-empty\"> No data disponible !</div>\r\n      </>\r\n    );\r\n    let header = (\r\n      <div className=\"col-md-6 float-right\">\r\n        <span className=\"input--hoshi float-right\">\r\n          <InputText\r\n            className=\"p-column-filter\"\r\n            type=\"search\"\r\n            onInput={e => this.setState({ globalFilter: e.target.value })}\r\n          />\r\n          <label className=\"p-column-title\" htmlFor=\"input\">\r\n            <span>Global Search</span>\r\n          </label>\r\n        </span>\r\n      </div>\r\n    );\r\n    let enteriesCount = this.props.value ? this.props.value.length : 0;\r\n    let footer = `there are ${enteriesCount} of enteries`;\r\n    let cols = this.props.cols;\r\n    let dynamicColumns = cols.map((col, i) => (\r\n      <Column\r\n        headerClassName=\"large-th\"\r\n        header={col.header}\r\n        sortable={true}\r\n        filter={col.filter}\r\n        key={col.field}\r\n        field={col.field}\r\n        body={col.body}\r\n        filterElement={col.filterElement}\r\n        sortField={col.sortField}\r\n        filterFunction={col.filterFunction}\r\n        filterMatchMode=\"custom\"\r\n      />\r\n    ));\r\n    return (\r\n      <DataTable\r\n        tableClassName=\"table-striped\"\r\n        header={header}\r\n        value={this.props.value}\r\n        resizableColumns={true}\r\n        paginator={true}\r\n        rows={10}\r\n        ref={this.props.reference}\r\n        globalFilter={this.state.globalFilter}\r\n        rowsPerPageOptions={[10, 20, 40]}\r\n        reorderableColumns={true}\r\n        reorderableRows={true}\r\n        onRowReorder={this.props.onRowReorder}\r\n        columnResizeMode={this.props.columnResizeMode}\r\n        footer={footer}\r\n        emptyMessage={NoDataMessage}\r\n      >\r\n        {dynamicColumns}\r\n      </DataTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OurDataTableCustom;\r\n","export default class FormatsConfiguration {\r\n  static NumberFormat = {\r\n    decimals: 2,\r\n    groupsSeparator: ',',\r\n    groupingBlock: 3,\r\n  };\r\n\r\n  static AmountFormat = {\r\n    ...FormatsConfiguration.NumberFormat,\r\n    decimals: 0,\r\n    currencyIsPrefix: false,\r\n  };\r\n  static DateTimeFormat = {\r\n    shortDate: 'MM/YYYY',\r\n    fullDate: 'DD/MM/YYYY',\r\n    time: 'HH:MM:SS',\r\n    dateTime: 'DD/MM/YYYY, HH:MM:SS',\r\n  };\r\n}\r\n","import styled from 'styled-components';\r\nexport const FormModalContainer = styled.div.attrs(props => ({\r\n  className: `modal_content modal-container colored-header colored-header-primary modal-effect-10 ${\r\n    props.show ? 'modal-show' : ''\r\n  }`,\r\n}))`\r\n  perspective: none;\r\n  height: 478.333px;\r\n`;\r\n","//@flow\r\nimport * as React from 'react';\r\nimport BackDrop from '../BackDrop/BackDrop';\r\nimport { t } from '../../../i18n';\r\nimport { FormModalContainer } from './FormModal.styles';\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: Function,\r\n  title: string,\r\n  children?: React.Node,\r\n  alert?: () => React.ReactNode,\r\n  handleValidate?: Function,\r\n  validateTitle: string,\r\n  cancelTitle: string,\r\n  hasCancelBtn?: boolean,\r\n  hasValidateBtn?: boolean,\r\n  validateBtnDisabled?: boolean,\r\n  cancelBtnDisabled?: boolean,\r\n};\r\n\r\nconst FormModalButtons = (props: Props) => (\r\n  <>\r\n    {props.hasCancelBtn && (\r\n      <button\r\n        className=\"modal-close btn-primary btn\"\r\n        data-text=\"cancel\"\r\n        onClick={props.handleClose}\r\n        disabled={props.cancelBtnDisabled}\r\n      >\r\n        <span>{props.cancelTitle}</span>\r\n      </button>\r\n    )}\r\n    {props.hasValidateBtn && (\r\n      <button\r\n        className=\"modal-close btn-primary btn\"\r\n        data-text=\"save\"\r\n        onClick={props.handleValidate}\r\n        disabled={props.validateBtnDisabled}\r\n      >\r\n        <span>{props.validateTitle}</span>\r\n      </button>\r\n    )}\r\n  </>\r\n);\r\nconst renderFooter = (props: Props) =>\r\n  props.hasCancelBtn || props.hasValidateBtn;\r\nconst FormModal = (props: Props) => (\r\n  <>\r\n    <BackDrop show={props.show} clicked={props.handleClose} />\r\n    <FormModalContainer show={props.show}>\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <button\r\n            className=\"modal-close close\"\r\n            data-dismiss=\"modal\"\r\n            onClick={props.handleClose}\r\n          >\r\n            ×\r\n          </button>\r\n          <h4>{props.title}</h4>\r\n        </div>\r\n        {props.alert && props.alert()}\r\n        <div className=\"modal-body\">{props.children}</div>\r\n        {renderFooter(props) && (\r\n          <div className=\"modal-footer\">\r\n            <p className=\"align_center\"></p>\r\n            <FormModalButtons {...props} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </FormModalContainer>\r\n  </>\r\n);\r\n\r\nFormModal.defaultProps = {\r\n  validateTitle: t('Components:modal.validateBtnTitle'),\r\n  cancelTitle: t('Components:modal.cancelBtnTitle'),\r\n  validateBtnDisabled: false,\r\n  cancelBtnDisabled: false,\r\n};\r\n\r\nexport default FormModal;\r\n","import React, { Component } from 'react';\r\nimport { Calendar } from 'primereact/calendar';\r\n\r\nexport class DateCalendar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dates: null,\r\n      show: false,\r\n      selectedDates: null,\r\n    };\r\n  }\r\n\r\n  handleDateChange = e => {\r\n    this.setState({ selectedDates: e.value });\r\n    this.props.onSelectDate({ selectedDates: e.value });\r\n  };\r\n  render() {\r\n    let CalendarClass = `${this.state.show ? 'd-block' : ''}`;\r\n    return (\r\n      <>\r\n        <span\r\n          className=\"icon-calendrier\"\r\n          onClick={() => {\r\n            this.setState({ show: !this.state.show });\r\n          }}\r\n        ></span>\r\n        <div>\r\n          <Calendar\r\n            readOnlyInput={true}\r\n            dateFormat=\"dd/mm/yy\"\r\n            className={CalendarClass}\r\n            value={this.state.dates}\r\n            onChange={e => {\r\n              this.setState({ dates: e.value });\r\n              this.props.handleDateChange(e);\r\n            }}\r\n            selectionMode=\"multiple\"\r\n            showIcon={true}\r\n            maxDate={this.props.maxDate}\r\n            showButtonBar={true}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateCalendar;\r\n","import moment from 'moment';\r\nimport FormatsConfiguration from './FormatsConfiguration';\r\nexport const formatDateTime = (dateTime, format) => {\r\n  if (!dateTime) return null;\r\n  return moment(dateTime).format(format);\r\n};\r\n\r\nexport const dateFilter = (value, filter) => {\r\n  value = formatDateTime(value, FormatsConfiguration.DateTimeFormat.fullDate);\r\n  let filters = filter.map(filterElement => {\r\n    filterElement = formatDateTime(\r\n      filterElement,\r\n      FormatsConfiguration.DateTimeFormat.fullDate,\r\n    );\r\n    return filterElement;\r\n  });\r\n  return filters.some(search => value.startsWith(search));\r\n};\r\n","import React from 'react';\r\n\r\nconst pageHeadNav = props => (\r\n  <div className=\"page-head_nav\">\r\n    <ul>{props.children}</ul>\r\n  </div>\r\n);\r\n\r\nexport default pageHeadNav;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c5f44293.PNG\";"],"sourceRoot":""}