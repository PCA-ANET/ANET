{"version":3,"sources":["../node_modules/numeral/numeral.js","features/Accounts/components/AccountsModal.js","components/Amount/Amount.jsx","components/ShowAccount/ShowAccount.js","components/FormatDateComponent/FormatDateComponent.js","features/Accounts/components/Operations.js","redux/operations/operations.actions.js","features/Accounts/components/Signaletic.js","features/Accounts/components/RIB.js","features/Accounts/components/feature.js","features/Accounts/index.js","components/Ui/BackDrop/BackDrop.js","components/Ui/BackDrop/BackDrop.module.css","pdf/account/bankStatement.js","components/Panel/Panel.js","components/PageHeadNav/PageHeadNav.js","assets/img/logos/logo.PNG"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_numeral","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","leadingCount","abbrForce","abs","_int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","_isNaN","_x","apply","arguments","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","multiplier","x","parts","correctionFactor","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","key","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","_format","space","splice","join","base","suffixes","binary","unformatRegex","concat","filter","item","_format2","bytes","suffix","bytesMultiplier","_format3","symbols","before","after","_format4","toExponential","_format5","_format6","_format7","hours","floor","minutes","seconds","timeArray","exports","__webpack_require__","module","AccountsModal","state","tempSelectedAccountId","_this","props","selectedAccountId","_isChecked","clientAccountId","_handleAccountChange","changeEvent","setState","target","_toggleModal","toggleModal","_handleFormSubmit","formSubmitEvent","preventDefault","selectAccount","_renderAccounts","accounts","react_default","a","createElement","className","onSubmit","map","account","index","accountName","accountNumber","id","checked","onChange","htmlFor","prevProps","prevState","snapshot","modalClass","modalShow","Fragment","BackDrop","show","clicked","style","fontSize","perspective","height","data-dismiss","onClick","disabled","data-text","React","PureComponent","connect","Accounts","dispatch","Amount","sign","positive","negative","amount","showAccount","bookBalance","data-modal","onclick","children","components_Amount_Amount","availableBalance","FormatDateComponent","formatDate","dateval","substring","date","Operations","getOperations","rows","operations","datas","valueDate","description","code","rowdateraw","rowdate","components_FormatDateComponent_FormatDateComponent","rowvalueDate","rowvalueDateraw","rowdescription","rowcode","rowamount","color","parseInt","rowmount","data","columns","label","field","sort","width","searchable","Panel","title","selectedAccountNumber","selectedAccount","download","mdbreact_esm","paginationLabel","searchLabel","infoLabel","responsive","btn","fixed","entriesOptions","hover","accountId","actionCreator","OperationsActionTypes","GET_OPERATIONS","Signaletic","getSignaletic","_this$props$signaleti","signaletic","NomPrenom","PieceId","Tel","Agec","react_router_dom","to","RIB","_this$props$rib","rib","bankCode","agencyCode","ribKey","align","colSpan","fullName","getSelectedAccountRIB","Feature","_renderAccountName","_activateTab","tab","activateTab","_renderActiveTab","activeTab","components_Operations","components_Signaletic","components_RIB","_this2","ShowAccount","PageHeadNav","components_AccountsModal","getSelectedAccount","Account","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_BackDrop_module_css__WEBPACK_IMPORTED_MODULE_1__","_BackDrop_module_css__WEBPACK_IMPORTED_MODULE_1___default","backDrop","classes","bankStatement","classCallCheck","possibleConstructorReturn","getPrototypeOf","numeroCompte","nextProps","react_pdf_browser_es","styles","body","src","require","header","author","text","Table","TR","TD","TT1","TD1","TD3","TT","pageNumber","render","_ref","totalPages","Component","Font","family","styled","View","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","Text","_templateObject6","_templateObject7","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","textAlign","fontFamily","marginBottom","subtitle","margin","image","marginVertical","marginHorizontal","position","bottom","left","right","headers","panel","filenameExcel","filenamePdf","button","btntxt","document","account_bankStatement","fileName","react_csv","separator","filename","pageHeadNav","p"],"mappings":"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","file":"static/js/8.c942a348.chunk.js","sourcesContent":["/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.numeral = factory();\n  }\n})(this, function () {\n  /************************************\n      Variables\n  ************************************/\n  var _numeral,\n      _,\n      VERSION = '2.0.6',\n      formats = {},\n      locales = {},\n      defaults = {\n    currentLocale: 'en',\n    zeroFormat: null,\n    nullFormat: null,\n    defaultFormat: '0,0',\n    scalePercentBy100: true\n  },\n      options = {\n    currentLocale: defaults.currentLocale,\n    zeroFormat: defaults.zeroFormat,\n    nullFormat: defaults.nullFormat,\n    defaultFormat: defaults.defaultFormat,\n    scalePercentBy100: defaults.scalePercentBy100\n  };\n  /************************************\n      Constructors\n  ************************************/\n  // Numeral prototype object\n\n\n  function Numeral(input, number) {\n    this._input = input;\n    this._value = number;\n  }\n\n  _numeral = function numeral(input) {\n    var value, kind, unformatFunction, regexp;\n\n    if (_numeral.isNumeral(input)) {\n      value = input.value();\n    } else if (input === 0 || typeof input === 'undefined') {\n      value = 0;\n    } else if (input === null || _.isNaN(input)) {\n      value = null;\n    } else if (typeof input === 'string') {\n      if (options.zeroFormat && input === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        for (kind in formats) {\n          regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n          if (regexp && input.match(regexp)) {\n            unformatFunction = formats[kind].unformat;\n            break;\n          }\n        }\n\n        unformatFunction = unformatFunction || _numeral._.stringToNumber;\n        value = unformatFunction(input);\n      }\n    } else {\n      value = Number(input) || null;\n    }\n\n    return new Numeral(input, value);\n  }; // version number\n\n\n  _numeral.version = VERSION; // compare numeral object\n\n  _numeral.isNumeral = function (obj) {\n    return obj instanceof Numeral;\n  }; // helper functions\n\n\n  _numeral._ = _ = {\n    // formats numbers separators, decimals places, signs, abbreviations\n    numberToFormat: function numberToFormat(value, format, roundingFunction) {\n      var locale = locales[_numeral.options.currentLocale],\n          negP = false,\n          optDec = false,\n          leadingCount = 0,\n          abbr = '',\n          trillion = 1000000000000,\n          billion = 1000000000,\n          million = 1000000,\n          thousand = 1000,\n          decimal = '',\n          neg = false,\n          abbrForce,\n          // force abbreviation\n      abs,\n          min,\n          max,\n          power,\n          _int,\n          precision,\n          signed,\n          thousands,\n          output; // make sure we never format a null value\n\n\n      value = value || 0;\n      abs = Math.abs(value); // see if we should use parentheses for negative number or if we should prefix with a sign\n      // if both are present we default to parentheses\n\n      if (_numeral._.includes(format, '(')) {\n        negP = true;\n        format = format.replace(/[\\(|\\)]/g, '');\n      } else if (_numeral._.includes(format, '+') || _numeral._.includes(format, '-')) {\n        signed = _numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n        format = format.replace(/[\\+|\\-]/g, '');\n      } // see if abbreviation is wanted\n\n\n      if (_numeral._.includes(format, 'a')) {\n        abbrForce = format.match(/a(k|m|b|t)?/);\n        abbrForce = abbrForce ? abbrForce[1] : false; // check for space before abbreviation\n\n        if (_numeral._.includes(format, ' a')) {\n          abbr = ' ';\n        }\n\n        format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n        if (abs >= trillion && !abbrForce || abbrForce === 't') {\n          // trillion\n          abbr += locale.abbreviations.trillion;\n          value = value / trillion;\n        } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n          // billion\n          abbr += locale.abbreviations.billion;\n          value = value / billion;\n        } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n          // million\n          abbr += locale.abbreviations.million;\n          value = value / million;\n        } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n          // thousand\n          abbr += locale.abbreviations.thousand;\n          value = value / thousand;\n        }\n      } // check for optional decimals\n\n\n      if (_numeral._.includes(format, '[.]')) {\n        optDec = true;\n        format = format.replace('[.]', '.');\n      } // break number and format\n\n\n      _int = value.toString().split('.')[0];\n      precision = format.split('.')[1];\n      thousands = format.indexOf(',');\n      leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n      if (precision) {\n        if (_numeral._.includes(precision, '[')) {\n          precision = precision.replace(']', '');\n          precision = precision.split('[');\n          decimal = _numeral._.toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n        } else {\n          decimal = _numeral._.toFixed(value, precision.length, roundingFunction);\n        }\n\n        _int = decimal.split('.')[0];\n\n        if (_numeral._.includes(decimal, '.')) {\n          decimal = locale.delimiters.decimal + decimal.split('.')[1];\n        } else {\n          decimal = '';\n        }\n\n        if (optDec && Number(decimal.slice(1)) === 0) {\n          decimal = '';\n        }\n      } else {\n        _int = _numeral._.toFixed(value, 0, roundingFunction);\n      } // check abbreviation again after rounding\n\n\n      if (abbr && !abbrForce && Number(_int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n        _int = String(Number(_int) / 1000);\n\n        switch (abbr) {\n          case locale.abbreviations.thousand:\n            abbr = locale.abbreviations.million;\n            break;\n\n          case locale.abbreviations.million:\n            abbr = locale.abbreviations.billion;\n            break;\n\n          case locale.abbreviations.billion:\n            abbr = locale.abbreviations.trillion;\n            break;\n        }\n      } // format number\n\n\n      if (_numeral._.includes(_int, '-')) {\n        _int = _int.slice(1);\n        neg = true;\n      }\n\n      if (_int.length < leadingCount) {\n        for (var i = leadingCount - _int.length; i > 0; i--) {\n          _int = '0' + _int;\n        }\n      }\n\n      if (thousands > -1) {\n        _int = _int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n      }\n\n      if (format.indexOf('.') === 0) {\n        _int = '';\n      }\n\n      output = _int + decimal + (abbr ? abbr : '');\n\n      if (negP) {\n        output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n      } else {\n        if (signed >= 0) {\n          output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n        } else if (neg) {\n          output = '-' + output;\n        }\n      }\n\n      return output;\n    },\n    // unformats numbers separators, decimals places, signs, abbreviations\n    stringToNumber: function stringToNumber(string) {\n      var locale = locales[options.currentLocale],\n          stringOriginal = string,\n          abbreviations = {\n        thousand: 3,\n        million: 6,\n        billion: 9,\n        trillion: 12\n      },\n          abbreviation,\n          value,\n          i,\n          regexp;\n\n      if (options.zeroFormat && string === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        value = 1;\n\n        if (locale.delimiters.decimal !== '.') {\n          string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n        }\n\n        for (abbreviation in abbreviations) {\n          regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n          if (stringOriginal.match(regexp)) {\n            value *= Math.pow(10, abbreviations[abbreviation]);\n            break;\n          }\n        } // check for negative number\n\n\n        value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1; // remove non numbers\n\n        string = string.replace(/[^0-9\\.]+/g, '');\n        value *= Number(string);\n      }\n\n      return value;\n    },\n    isNaN: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function (value) {\n      return typeof value === 'number' && isNaN(value);\n    }),\n    includes: function includes(string, search) {\n      return string.indexOf(search) !== -1;\n    },\n    insert: function insert(string, subString, start) {\n      return string.slice(0, start) + subString + string.slice(start);\n    },\n    reduce: function reduce(array, callback\n    /*, initialValue*/\n    ) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.reduce called on null or undefined');\n      }\n\n      if (typeof callback !== 'function') {\n        throw new TypeError(callback + ' is not a function');\n      }\n\n      var t = Object(array),\n          len = t.length >>> 0,\n          k = 0,\n          value;\n\n      if (arguments.length === 3) {\n        value = arguments[2];\n      } else {\n        while (k < len && !(k in t)) {\n          k++;\n        }\n\n        if (k >= len) {\n          throw new TypeError('Reduce of empty array with no initial value');\n        }\n\n        value = t[k++];\n      }\n\n      for (; k < len; k++) {\n        if (k in t) {\n          value = callback(value, t[k], k, t);\n        }\n      }\n\n      return value;\n    },\n\n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    multiplier: function multiplier(x) {\n      var parts = x.toString().split('.');\n      return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n    },\n\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    correctionFactor: function correctionFactor() {\n      var args = Array.prototype.slice.call(arguments);\n      return args.reduce(function (accum, next) {\n        var mn = _.multiplier(next);\n\n        return accum > mn ? accum : mn;\n      }, 1);\n    },\n\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    toFixed: function toFixed(value, maxDecimals, roundingFunction, optionals) {\n      var splitValue = value.toString().split('.'),\n          minDecimals = maxDecimals - (optionals || 0),\n          boundedPrecision,\n          optionalsRegExp,\n          power,\n          output; // Use the smallest precision value possible to avoid errors from floating point representation\n\n      if (splitValue.length === 2) {\n        boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n      } else {\n        boundedPrecision = minDecimals;\n      }\n\n      power = Math.pow(10, boundedPrecision); // Multiply up by precision, round accurately, then divide and use native toFixed():\n\n      output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n      if (optionals > maxDecimals - boundedPrecision) {\n        optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n        output = output.replace(optionalsRegExp, '');\n      }\n\n      return output;\n    }\n  }; // avaliable options\n\n  _numeral.options = options; // avaliable formats\n\n  _numeral.formats = formats; // avaliable formats\n\n  _numeral.locales = locales; // This function sets the current locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n  _numeral.locale = function (key) {\n    if (key) {\n      options.currentLocale = key.toLowerCase();\n    }\n\n    return options.currentLocale;\n  }; // This function provides access to the loaded locale data.  If\n  // no arguments are passed in, it will simply return the current\n  // global locale object.\n\n\n  _numeral.localeData = function (key) {\n    if (!key) {\n      return locales[options.currentLocale];\n    }\n\n    key = key.toLowerCase();\n\n    if (!locales[key]) {\n      throw new Error('Unknown locale : ' + key);\n    }\n\n    return locales[key];\n  };\n\n  _numeral.reset = function () {\n    for (var property in defaults) {\n      options[property] = defaults[property];\n    }\n  };\n\n  _numeral.zeroFormat = function (format) {\n    options.zeroFormat = typeof format === 'string' ? format : null;\n  };\n\n  _numeral.nullFormat = function (format) {\n    options.nullFormat = typeof format === 'string' ? format : null;\n  };\n\n  _numeral.defaultFormat = function (format) {\n    options.defaultFormat = typeof format === 'string' ? format : '0.0';\n  };\n\n  _numeral.register = function (type, name, format) {\n    name = name.toLowerCase();\n\n    if (this[type + 's'][name]) {\n      throw new TypeError(name + ' ' + type + ' already registered.');\n    }\n\n    this[type + 's'][name] = format;\n    return format;\n  };\n\n  _numeral.validate = function (val, culture) {\n    var _decimalSep, _thousandSep, _currSymbol, _valArray, _abbrObj, _thousandRegEx, localeData, temp; //coerce val to string\n\n\n    if (typeof val !== 'string') {\n      val += '';\n\n      if (console.warn) {\n        console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n      }\n    } //trim whitespaces from either sides\n\n\n    val = val.trim(); //if val is just digits return true\n\n    if (!!val.match(/^\\d+$/)) {\n      return true;\n    } //if val is empty return false\n\n\n    if (val === '') {\n      return false;\n    } //get the decimal and thousands separator from numeral.localeData\n\n\n    try {\n      //check if the culture is understood by numeral. if not, default it to current locale\n      localeData = _numeral.localeData(culture);\n    } catch (e) {\n      localeData = _numeral.localeData(_numeral.locale());\n    } //setup the delimiters and currency symbol based on culture/locale\n\n\n    _currSymbol = localeData.currency.symbol;\n    _abbrObj = localeData.abbreviations;\n    _decimalSep = localeData.delimiters.decimal;\n\n    if (localeData.delimiters.thousands === '.') {\n      _thousandSep = '\\\\.';\n    } else {\n      _thousandSep = localeData.delimiters.thousands;\n    } // validating currency symbol\n\n\n    temp = val.match(/^[^\\d]+/);\n\n    if (temp !== null) {\n      val = val.substr(1);\n\n      if (temp[0] !== _currSymbol) {\n        return false;\n      }\n    } //validating abbreviation symbol\n\n\n    temp = val.match(/[^\\d]+$/);\n\n    if (temp !== null) {\n      val = val.slice(0, -1);\n\n      if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n        return false;\n      }\n    }\n\n    _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n    if (!val.match(/[^\\d.,]/g)) {\n      _valArray = val.split(_decimalSep);\n\n      if (_valArray.length > 2) {\n        return false;\n      } else {\n        if (_valArray.length < 2) {\n          return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx);\n        } else {\n          if (_valArray[0].length === 1) {\n            return !!_valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          } else {\n            return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /************************************\n      Numeral Prototype\n  ************************************/\n\n\n  _numeral.fn = Numeral.prototype = {\n    clone: function clone() {\n      return _numeral(this);\n    },\n    format: function format(inputString, roundingFunction) {\n      var value = this._value,\n          format = inputString || options.defaultFormat,\n          kind,\n          output,\n          formatFunction; // make sure we have a roundingFunction\n\n      roundingFunction = roundingFunction || Math.round; // format based on value\n\n      if (value === 0 && options.zeroFormat !== null) {\n        output = options.zeroFormat;\n      } else if (value === null && options.nullFormat !== null) {\n        output = options.nullFormat;\n      } else {\n        for (kind in formats) {\n          if (format.match(formats[kind].regexps.format)) {\n            formatFunction = formats[kind].format;\n            break;\n          }\n        }\n\n        formatFunction = formatFunction || _numeral._.numberToFormat;\n        output = formatFunction(value, format, roundingFunction);\n      }\n\n      return output;\n    },\n    value: function value() {\n      return this._value;\n    },\n    input: function input() {\n      return this._input;\n    },\n    set: function set(value) {\n      this._value = Number(value);\n      return this;\n    },\n    add: function add(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n      function cback(accum, curr, currI, O) {\n        return accum + Math.round(corrFactor * curr);\n      }\n\n      this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n      return this;\n    },\n    subtract: function subtract(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n      function cback(accum, curr, currI, O) {\n        return accum - Math.round(corrFactor * curr);\n      }\n\n      this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n      return this;\n    },\n    multiply: function multiply(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n\n        return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n      }\n\n      this._value = _.reduce([this._value, value], cback, 1);\n      return this;\n    },\n    divide: function divide(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n\n        return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n      }\n\n      this._value = _.reduce([this._value, value], cback);\n      return this;\n    },\n    difference: function difference(value) {\n      return Math.abs(_numeral(this._value).subtract(value).value());\n    }\n  };\n  /************************************\n      Default Locale && Format\n  ************************************/\n\n  _numeral.register('locale', 'en', {\n    delimiters: {\n      thousands: ',',\n      decimal: '.'\n    },\n    abbreviations: {\n      thousand: 'k',\n      million: 'm',\n      billion: 'b',\n      trillion: 't'\n    },\n    ordinal: function ordinal(number) {\n      var b = number % 10;\n      return ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    },\n    currency: {\n      symbol: '$'\n    }\n  });\n\n  (function () {\n    _numeral.register('format', 'bps', {\n      regexps: {\n        format: /(BPS)/,\n        unformat: /(BPS)/\n      },\n      format: function format(value, _format, roundingFunction) {\n        var space = _numeral._.includes(_format, ' BPS') ? ' ' : '',\n            output;\n        value = value * 10000; // check for space before BPS\n\n        _format = _format.replace(/\\s?BPS/, '');\n        output = _numeral._.numberToFormat(value, _format, roundingFunction);\n\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + 'BPS');\n          output = output.join('');\n        } else {\n          output = output + space + 'BPS';\n        }\n\n        return output;\n      },\n      unformat: function unformat(string) {\n        return +(_numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n      }\n    });\n  })();\n\n  (function () {\n    var decimal = {\n      base: 1000,\n      suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    },\n        binary = {\n      base: 1024,\n      suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n    };\n    var allSuffixes = decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n      return decimal.suffixes.indexOf(item) < 0;\n    }));\n    var unformatRegex = allSuffixes.join('|'); // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n\n    unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    _numeral.register('format', 'bytes', {\n      regexps: {\n        format: /([0\\s]i?b)/,\n        unformat: new RegExp(unformatRegex)\n      },\n      format: function format(value, _format2, roundingFunction) {\n        var output,\n            bytes = _numeral._.includes(_format2, 'ib') ? binary : decimal,\n            suffix = _numeral._.includes(_format2, ' b') || _numeral._.includes(_format2, ' ib') ? ' ' : '',\n            power,\n            min,\n            max; // check for space before\n\n        _format2 = _format2.replace(/\\s?i?b/, '');\n\n        for (power = 0; power <= bytes.suffixes.length; power++) {\n          min = Math.pow(bytes.base, power);\n          max = Math.pow(bytes.base, power + 1);\n\n          if (value === null || value === 0 || value >= min && value < max) {\n            suffix += bytes.suffixes[power];\n\n            if (min > 0) {\n              value = value / min;\n            }\n\n            break;\n          }\n        }\n\n        output = _numeral._.numberToFormat(value, _format2, roundingFunction);\n        return output + suffix;\n      },\n      unformat: function unformat(string) {\n        var value = _numeral._.stringToNumber(string),\n            power,\n            bytesMultiplier;\n\n        if (value) {\n          for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n            if (_numeral._.includes(string, decimal.suffixes[power])) {\n              bytesMultiplier = Math.pow(decimal.base, power);\n              break;\n            }\n\n            if (_numeral._.includes(string, binary.suffixes[power])) {\n              bytesMultiplier = Math.pow(binary.base, power);\n              break;\n            }\n          }\n\n          value *= bytesMultiplier || 1;\n        }\n\n        return value;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'currency', {\n      regexps: {\n        format: /(\\$)/\n      },\n      format: function format(value, _format3, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n            symbols = {\n          before: _format3.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n          after: _format3.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n        },\n            output,\n            symbol,\n            i; // strip format of spaces and $\n\n        _format3 = _format3.replace(/\\s?\\$\\s?/, ''); // format the number\n\n        output = _numeral._.numberToFormat(value, _format3, roundingFunction); // update the before and after based on value\n\n        if (value >= 0) {\n          symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n          symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n        } else if (value < 0 && !_numeral._.includes(symbols.before, '-') && !_numeral._.includes(symbols.before, '(')) {\n          symbols.before = '-' + symbols.before;\n        } // loop through each before symbol\n\n\n        for (i = 0; i < symbols.before.length; i++) {\n          symbol = symbols.before[i];\n\n          switch (symbol) {\n            case '$':\n              output = _numeral._.insert(output, locale.currency.symbol, i);\n              break;\n\n            case ' ':\n              output = _numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n              break;\n          }\n        } // loop through each after symbol\n\n\n        for (i = symbols.after.length - 1; i >= 0; i--) {\n          symbol = symbols.after[i];\n\n          switch (symbol) {\n            case '$':\n              output = i === symbols.after.length - 1 ? output + locale.currency.symbol : _numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n              break;\n\n            case ' ':\n              output = i === symbols.after.length - 1 ? output + ' ' : _numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n              break;\n          }\n        }\n\n        return output;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'exponential', {\n      regexps: {\n        format: /(e\\+|e-)/,\n        unformat: /(e\\+|e-)/\n      },\n      format: function format(value, _format4, roundingFunction) {\n        var output,\n            exponential = typeof value === 'number' && !_numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n            parts = exponential.split('e');\n        _format4 = _format4.replace(/e[\\+|\\-]{1}0/, '');\n        output = _numeral._.numberToFormat(Number(parts[0]), _format4, roundingFunction);\n        return output + 'e' + parts[1];\n      },\n      unformat: function unformat(string) {\n        var parts = _numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n            value = Number(parts[0]),\n            power = Number(parts[1]);\n        power = _numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n        function cback(accum, curr, currI, O) {\n          var corrFactor = _numeral._.correctionFactor(accum, curr),\n              num = accum * corrFactor * (curr * corrFactor) / (corrFactor * corrFactor);\n\n          return num;\n        }\n\n        return _numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'ordinal', {\n      regexps: {\n        format: /(o)/\n      },\n      format: function format(value, _format5, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n            output,\n            ordinal = _numeral._.includes(_format5, ' o') ? ' ' : ''; // check for space before\n\n        _format5 = _format5.replace(/\\s?o/, '');\n        ordinal += locale.ordinal(value);\n        output = _numeral._.numberToFormat(value, _format5, roundingFunction);\n        return output + ordinal;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'percentage', {\n      regexps: {\n        format: /(%)/,\n        unformat: /(%)/\n      },\n      format: function format(value, _format6, roundingFunction) {\n        var space = _numeral._.includes(_format6, ' %') ? ' ' : '',\n            output;\n\n        if (_numeral.options.scalePercentBy100) {\n          value = value * 100;\n        } // check for space before %\n\n\n        _format6 = _format6.replace(/\\s?\\%/, '');\n        output = _numeral._.numberToFormat(value, _format6, roundingFunction);\n\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + '%');\n          output = output.join('');\n        } else {\n          output = output + space + '%';\n        }\n\n        return output;\n      },\n      unformat: function unformat(string) {\n        var number = _numeral._.stringToNumber(string);\n\n        if (_numeral.options.scalePercentBy100) {\n          return number * 0.01;\n        }\n\n        return number;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'time', {\n      regexps: {\n        format: /(:)/,\n        unformat: /(:)/\n      },\n      format: function format(value, _format7, roundingFunction) {\n        var hours = Math.floor(value / 60 / 60),\n            minutes = Math.floor((value - hours * 60 * 60) / 60),\n            seconds = Math.round(value - hours * 60 * 60 - minutes * 60);\n        return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n      },\n      unformat: function unformat(string) {\n        var timeArray = string.split(':'),\n            seconds = 0; // turn hours and minutes into seconds and add them all up\n\n        if (timeArray.length === 3) {\n          // hours\n          seconds = seconds + Number(timeArray[0]) * 60 * 60; // minutes\n\n          seconds = seconds + Number(timeArray[1]) * 60; // seconds\n\n          seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n          // minutes\n          seconds = seconds + Number(timeArray[0]) * 60; // seconds\n\n          seconds = seconds + Number(timeArray[1]);\n        }\n\n        return Number(seconds);\n      }\n    });\n  })();\n\n  return _numeral;\n});","import React from 'react';\r\nimport BackDrop from '../../../components/Ui/BackDrop/BackDrop';\r\nimport { t } from '../../../i18n';\r\nimport {\r\n  selectAccount,\r\n  toggleModal,\r\n} from '../../../redux/accounts/accounts.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AccountsModal extends React.PureComponent {\r\n  state = { tempSelectedAccountId: this.props.selectedAccountId };\r\n\r\n  _isChecked = clientAccountId =>\r\n    this.state.tempSelectedAccountId &&\r\n    clientAccountId.toString() === this.state.tempSelectedAccountId.toString();\r\n\r\n  _handleAccountChange = changeEvent => {\r\n    this.setState({\r\n      tempSelectedAccountId: changeEvent.target.value,\r\n    });\r\n  };\r\n\r\n  _toggleModal = () => {\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  _handleFormSubmit = formSubmitEvent => {\r\n    formSubmitEvent.preventDefault();\r\n    this.props.selectAccount(this.state.tempSelectedAccountId);\r\n    this._toggleModal();\r\n  };\r\n\r\n  _renderAccounts = () => {\r\n    if (this.props.accounts.length > 0) {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <div className=\"col-sm-12\">\r\n            <form onSubmit={this._handleFormSubmit}>\r\n              {this.props.accounts.map((account, index) => {\r\n                const { clientAccountId, accountName, accountNumber } = account;\r\n                return (\r\n                  <div className=\"bcp-radio bcp-radio-color inline\" key={index}>\r\n                    <input\r\n                      id={clientAccountId}\r\n                      type=\"radio\"\r\n                      name=\"rad9\"\r\n                      value={clientAccountId}\r\n                      checked={this._isChecked(clientAccountId)}\r\n                      onChange={this._handleAccountChange}\r\n                    />\r\n                    <label htmlFor={clientAccountId}>\r\n                      {`${accountName} n° ${accountNumber}`}\r\n                    </label>\r\n                  </div>\r\n                );\r\n              })}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedAccountId !== this.props.selectedAccountId) {\r\n      this.setState({ tempSelectedAccountId: this.props.selectedAccountId });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let modalClass = `modal_content modal-container colored-header colored-header-primary modal-effect-10 ${\r\n      this.props.modalShow ? 'modal-show' : ''\r\n    }`;\r\n    return (\r\n      <>\r\n        <BackDrop show={this.props.modalShow} clicked={this._toggleModal} />\r\n        <div\r\n          className=\"modal_container popin-choice\"\r\n          style={{ fontSize: '20px' }}\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div\r\n              className={modalClass}\r\n              style={{\r\n                perspective: this.props.modalShow ? 'none' : '1300px',\r\n                height: '424px',\r\n              }}\r\n            >\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <button\r\n                    className=\"modal-close close\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={this._toggleModal}\r\n                  >\r\n                    ×\r\n                  </button>\r\n                  <h4>{t('Accounts:chooseAccount')}</h4>\r\n                </div>\r\n                <div className=\"modal-body\">{this._renderAccounts()}</div>\r\n                <div className=\"modal-footer\">\r\n                  <p className=\"align_center\" />\r\n                  <button\r\n                    disabled={this.state.tempSelectedAccountId === null}\r\n                    className=\"modal-close btn-primary btn\"\r\n                    data-text=\"valider\"\r\n                    onClick={this._handleFormSubmit}\r\n                  >\r\n                    <span>{t('Components:validate')}</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectAccount: selectedAccountId => {\r\n    dispatch(selectAccount(selectedAccountId));\r\n  },\r\n  toggleModal: () => {\r\n    dispatch(toggleModal());\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  modalShow: state.Accounts.modalShow,\r\n  selectedAccountId: state.Accounts.selectedAccountId,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(AccountsModal);\r\n","import Numeral from 'numeral';\r\nimport React from 'react';\r\n\r\nconst Amount = props => {\r\n  const currency = props.currency ? props.currency : '';\r\n  let sign = '';\r\n  if (props.positive) {\r\n    sign = '+ ';\r\n  } else if (props.negative) {\r\n    sign = '- ';\r\n  }\r\n  return (\r\n    <>\r\n      {sign}\r\n      {Numeral(props.amount)\r\n        .format('0,0')\r\n        .replace(',', ' ')\r\n        .concat(` ${currency}`)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Amount;\r\n","import React from 'react';\r\nimport { t } from '../../i18n';\r\nimport Amount from '../Amount/Amount';\r\n\r\nconst showAccount = props => {\r\n  let account = { accountName: '', accountNumber: '', bookBalance: '' };\r\n  if (props.account !== undefined) {\r\n    account = props.account;\r\n  }\r\n  return (\r\n    <div className=\"page-head\">\r\n      <div className=\"page-head-compte\">\r\n        <div className=\"left-col\">\r\n          <div className=\"left__top\">\r\n            <h2 className=\"page-head-title\">\r\n              {account.accountName}\r\n              <span>(n° {account.accountNumber})</span>\r\n            </h2>\r\n            <button\r\n              className=\"btn btn-space btn-primary md-trigger popin_btn\"\r\n              type=\"button\"\r\n              data-modal=\"colored-primary\"\r\n              onClick={props.onclick}\r\n            />\r\n          </div>\r\n          <ol className=\"breadcrumb page-head-nav\">{props.children}</ol>\r\n        </div>\r\n        <div className=\"right-col solde-info\">\r\n          <div className=\"solde-top\">\r\n            <span className=\"lbl\">{t('Components:availableBalance')}</span>\r\n            <span className=\"price\">\r\n              <Amount\r\n                amount={account.availableBalance}\r\n                currency={t('Components:currency')}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default showAccount;\r\n","import React from 'react';\r\n\r\nconst FormatDateComponent = props => {\r\n  let formatDate = dateval => {\r\n    if (dateval !== null)\r\n      return `${dateval.substring(\r\n        dateval.length - 2,\r\n        dateval.length,\r\n      )}/${dateval.substring(\r\n        dateval.length - 4,\r\n        dateval.length - 2,\r\n      )}/${dateval.substring(0, 4)}`;\r\n    return null;\r\n  };\r\n  if (props.sign === 'C') {\r\n    return <div className=\"positif_transaction\">{formatDate(props.date)}</div>;\r\n  } else {\r\n    if (props.value) {\r\n     return <div>{formatDate(props.date)}</div>;\r\n    } else {\r\n      return <div className=\"negative_transaction\">{formatDate(props.date)}</div>;\r\n    }\r\n  }\r\n};\r\n\r\n  export default FormatDateComponent;\r\n","import React from 'react';\r\nimport Panel from '../../../components/Panel/Panel';\r\nimport { t } from '../../../i18n';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { connect } from 'react-redux';\r\nimport { getOperations } from '../../../redux/operations/operations.actions';\r\nimport FormatDate from '../../../components/FormatDateComponent/FormatDateComponent';\r\nimport Amount from '../../../components/Amount/Amount';\r\n\r\nclass Operations extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.getOperations();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedAccountId !== this.props.selectedAccountId)\r\n      this.props.getOperations();\r\n  }\r\n\r\n  render() {\r\n    let rowdata = this.props.operations;\r\n    let rows = rowdata.map(datas => {\r\n      const { date, valueDate, description, code, amount, sign } = datas;\r\n      const newRow = {\r\n        rowdateraw: date,\r\n        rowdate: <FormatDate date={date} sign={sign} value={false} />,\r\n        rowvalueDate: valueDate,\r\n        rowvalueDateraw: <FormatDate date={valueDate} value={true} />,\r\n        rowdescription: description,\r\n        rowcode: code,\r\n        rowamount:\r\n          sign === 'C' ? (\r\n            <span style={{ color: 'green' }}>\r\n              <Amount amount={parseInt(amount)} positive />\r\n            </span>\r\n          ) : (\r\n            <span style={{ color: 'red' }}>\r\n              <Amount amount={parseInt(amount)} negative />\r\n            </span>\r\n          ),\r\n        rowmount: sign === 'C' ? parseInt(amount) : parseInt(amount) * -1,\r\n      };\r\n      return newRow;\r\n    });\r\n\r\n    let data = {\r\n      columns: [\r\n        {\r\n          label: '',\r\n          field: 'x',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: t('Accounts:date'),\r\n          field: 'rowdateraw',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: '',\r\n          field: 'y',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: t('Accounts:dateValue'),\r\n          field: 'rowvalueDate',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: t('Accounts:description'),\r\n          field: 'rowdescription',\r\n          sort: 'asc',\r\n          width: 120000,\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: t('Accounts:reference'),\r\n          field: 'rowcode',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: t('Accounts:amount').concat(` (${t('Components:currency')})`),\r\n          field: 'rowmount',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n        {\r\n          label: '',\r\n          field: 'z',\r\n          sort: 'asc',\r\n          width: '100px',\r\n          searchable: true,\r\n        },\r\n      ],\r\n      rows: rows,\r\n    };\r\n\r\n    return (\r\n      <div className=\"page-container_inner\">\r\n        <div className=\"main-content \">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12\">\r\n              <Panel\r\n                title={t('Accounts:operationsHistory')}\r\n                operations={this.props.operations}\r\n                selectedAccountNumber={this.props.selectedAccount}\r\n                download\r\n              >\r\n                <MDBDataTable\r\n                  paginationLabel={[t('Accounts:previous'), t('Accounts:next')]}\r\n                  searchLabel={t('Accounts:search')}\r\n                  infoLabel={[\r\n                    t('Accounts:showing'),\r\n                    t('Accounts:to'),\r\n                    t('Accounts:of'),\r\n                    t('Accounts:entries'),\r\n                  ]}\r\n                  responsive\r\n                  btn={true}\r\n                  fixed\r\n                  entriesOptions={[7, 10, 40]}\r\n                  hover\r\n                  className=\"table-history-operation\"\r\n                  data={data}\r\n                />\r\n              </Panel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getOperations: accountId => {\r\n    dispatch(getOperations(accountId));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  operations: state.Operations.operations,\r\n  selectedAccountId: state.Accounts.selectedAccountId,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Operations);\r\n","import { actionCreator } from '../../utils/generators';\r\nimport OperationsActionTypes from './operations.types';\r\n\r\nexport const getOperations = () => ({\r\n  type: actionCreator('req', OperationsActionTypes.GET_OPERATIONS),\r\n});\r\n","import React from 'react';\r\nimport { getSignaletic } from '../../../redux/accounts/accounts.actions';\r\nimport { connect } from 'react-redux';\r\nimport { t } from '../../../i18n';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signaletic extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.getSignaletic();\r\n  }\r\n\r\n  render() {\r\n    let { NomPrenom, PieceId, Tel, Agec } = this.props.signaletic;\r\n    return (\r\n      <div className=\"page-container_inner\">\r\n        <div className=\"main-content container-fluid\">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading panel-heading-divider\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      {t('Accounts:signaleticForm')}\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"download_links dropdown_area float_right\">\r\n                        <span className=\"purple_download\">\r\n                          {t('Accounts:download')} :&nbsp;\r\n                          <Link to=\"#\">PDF</Link>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <div className=\"detail-compte\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 col-left\">\r\n                        <ul>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:fullName')}\r\n                            </span>\r\n                            <span className=\"text\">{NomPrenom}</span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:idType')}\r\n                            </span>\r\n                            <span className=\"text\">{t('Accounts:CIN')}</span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:idNumber')}\r\n                            </span>\r\n                            <span className=\"text\">{PieceId}</span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:resident')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:agency')}\r\n                            </span>\r\n                            <span className=\"text\">{Agec}</span>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-right\">\r\n                        <ul>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:address')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:postalCode')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">{t('Accounts:city')}</span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:country')}\r\n                            </span>\r\n                            <span className=\"text\"></span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"title\">\r\n                              {t('Accounts:phoneNumber')}\r\n                            </span>\r\n                            <span className=\"text\">{Tel[0]}</span>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSignaletic: () => {\r\n    dispatch(getSignaletic());\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  signaletic: state.Accounts.signaletic,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Signaletic);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { t } from '../../../i18n';\r\nimport { Link } from 'react-router-dom';\r\nimport { getSelectedAccountRIB } from '../../../redux/accounts/accounts.selectors';\r\nimport { getSignaletic } from '../../../redux/accounts/accounts.actions';\r\n\r\nclass RIB extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.getSignaletic();\r\n  }\r\n\r\n  render() {\r\n    let { bankCode, agencyCode, accountNumber, ribKey } = this.props.rib;\r\n    return (\r\n      <div className=\"page-container_inner\">\r\n        <div className=\"main-content container-fluid\">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading panel-heading-divider\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">{t('Accounts:rib')}</div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"download_links dropdown_area float_right\">\r\n                        <span className=\"purple_download\">\r\n                          {t('Accounts:download')} :&nbsp;\r\n                          <Link to=\"#\">PDF</Link>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"panel-body rib_page\">\r\n                  <div className=\"rib_content\">\r\n                    <div className=\"releve_bancaire\">\r\n                      <h3>{t('Accounts:ribTitle')}</h3>\r\n                    </div>\r\n                    <div className=\"rib_top\">\r\n                      <div className=\"left_rib_top\">\r\n                        <table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th width=\"23%\">{t('Accounts:bankCode')}</th>\r\n                              <th width=\"15%\">{t('Accounts:agencyCode')}</th>\r\n                              <th>{t('Accounts:accountNumber')}</th>\r\n                              <th width=\"12%\" align=\"center\">\r\n                                {t('Accounts:ribKey')}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>{bankCode}</td>\r\n                              <td>{agencyCode}</td>\r\n                              <td>{accountNumber}</td>\r\n                              <td>{ribKey}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td colSpan=\"4\">&nbsp;</td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <tfoot>\r\n                            <tr>\r\n                              <td colSpan=\"2\">{t('Accounts:swiftCode')}</td>\r\n                              <td colSpan=\"2\">Y</td>\r\n                            </tr>\r\n                          </tfoot>\r\n                        </table>\r\n                      </div>\r\n                      <div className=\"right_rib_top\">\r\n                        <h3>{t('Accounts:agency')} X</h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"rib_bot\">\r\n                      <div className=\"left_rib_bot\">\r\n                        <h3>{t('Accounts:domiciliation')}</h3>\r\n                        <p>Y</p>\r\n                      </div>\r\n                      <div className=\"right_rib_bot\">\r\n                        <h3>{t('Accounts:accountOwner')}</h3>\r\n                        <p>{this.props.fullName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"rib_remarque\">\r\n                      <p>{t('Accounts:ribRemark')}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSignaletic: () => {\r\n    dispatch(getSignaletic());\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  rib: getSelectedAccountRIB(state),\r\n  fullName: state.Accounts.signaletic.NomPrenom,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RIB);\r\n","import React from 'react';\r\nimport Modal from './AccountsModal';\r\nimport SelectedAccount from '../../../components/ShowAccount/ShowAccount';\r\nimport HeadNav from '../../../components/PageHeadNav/PageHeadNav';\r\nimport { Link } from 'react-router-dom';\r\nimport { t } from '../../../i18n';\r\nimport Operations from './Operations';\r\nimport Signaletic from './Signaletic';\r\nimport RIB from './RIB';\r\n\r\nclass Feature extends React.PureComponent {\r\n  _renderAccountName = () => {\r\n    if (this.props.selectedAccount !== undefined) {\r\n      let accountToString = [\r\n        t('Accounts:account'),\r\n        this.props.selectedAccount.accountName,\r\n        'N° :',\r\n        this.props.selectedAccount.accountNumber,\r\n      ].join(' ');\r\n      return accountToString;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  _activateTab = tab => {\r\n    this.props.activateTab(tab);\r\n  };\r\n\r\n  _renderActiveTab = () => {\r\n    switch (this.props.activeTab) {\r\n      case 'operations':\r\n        return <Operations />;\r\n      case 'details':\r\n        return <Signaletic />;\r\n      case 'rib':\r\n        return <RIB />;\r\n      default:\r\n        return <Operations />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let tabs = ['operations', 'details', 'rib'];\r\n    return (\r\n      <div className=\"page-content\">\r\n        <div className=\"page-content_side\">\r\n          <SelectedAccount\r\n            account={this.props.selectedAccount}\r\n            onclick={() => this.props.toggleModal()}\r\n          >\r\n            <li>\r\n              <Link to=\"#\">{t('Accounts:home')}</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">{t('Accounts:accounts')}</Link>\r\n            </li>\r\n            <li className=\"active\">{this._renderAccountName()}</li>\r\n          </SelectedAccount>\r\n        </div>\r\n        <HeadNav>\r\n          {tabs.map(tab => (\r\n            <li>\r\n              <Link\r\n                className={tab === this.props.activeTab && 'active'}\r\n                title={tab}\r\n                to=\"#\"\r\n                onClick={() => this._activateTab(tab)}\r\n              >\r\n                {t(`Accounts:${tab}`)}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </HeadNav>\r\n        {this._renderActiveTab()}\r\n        <Modal accounts={this.props.accounts} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feature;\r\n","import { connect } from 'react-redux';\r\nimport Account from './components/feature';\r\nimport { getSelectedAccount } from '../../redux/accounts/accounts.selectors';\r\nimport {\r\n  toggleModal,\r\n  activateTab,\r\n} from '../../redux/accounts/accounts.actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  accounts: state.Accounts.accounts,\r\n  selectedAccount: getSelectedAccount(state),\r\n  selectedAccountId: state.Accounts.selectedAccountId,\r\n  activeTab: state.Accounts.activeTab,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleModal: () => {\r\n    dispatch(toggleModal());\r\n  },\r\n  activateTab: activeTab => {\r\n    dispatch(activateTab(activeTab));\r\n  },\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Account);\r\n","import React from 'react';\r\nimport classes from './BackDrop.module.css';\r\n\r\nconst backDrop = props =>\r\n  props.show ? (\r\n    <div className={classes.BackDrop} onClick={props.clicked} />\r\n  ) : null;\r\n\r\nexport default backDrop;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__3kRAg\"};","import React, { Component } from 'react';\r\nimport {\r\n  Image,\r\n  Font,\r\n  Page,\r\n  Text,\r\n  Document,\r\n  StyleSheet,\r\n} from '@react-pdf/renderer';\r\nimport styled from '@react-pdf/styled-components';\r\nimport { t } from '../../i18n';\r\n\r\nclass bankStatement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numeroCompte: null,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      numeroCompte: this.props.numeroCompte,\r\n      data: this.props.data,\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.data === nextProps.data) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Document>\r\n        <Page style={styles.body}>\r\n          <Image\r\n            style={{ width: '20vw', height: '9vh' }}\r\n            src={require('./../../assets/img/logos/logo.PNG')}\r\n          />\r\n\r\n          <Text style={styles.header} fixed></Text>\r\n\r\n          <Text style={styles.title}>{t('Accounts:bankStatement30')}</Text>\r\n          <Text style={styles.author}>\r\n            {t('Accounts:accountNumer')} {this.props.numeroCompte}\r\n          </Text>\r\n\r\n          <Text style={styles.text}>{t('Accounts:lastOperations')}</Text>\r\n\r\n          <Table>\r\n            <TR>\r\n              <TD>\r\n                <TT1>{t('Accounts:date')}</TT1>\r\n              </TD>\r\n              <TD>\r\n                <TT1>{t('Accounts:dateValue')}</TT1>\r\n              </TD>\r\n              <TD1>\r\n                <TT1>{t('Accounts:description')}</TT1>\r\n              </TD1>\r\n              <TD3>\r\n                <TT1>{t('Accounts:reference')}</TT1>\r\n              </TD3>\r\n              <TD>\r\n                <TT1>{t('Accounts:amount')}</TT1>\r\n              </TD>\r\n            </TR>\r\n            {this.props.data\r\n              ? this.props.data.map(a => (\r\n                <React.Fragment key={a.code}>\r\n                <TR>\r\n                  <TD>\r\n                    <TT>{a.date}</TT>\r\n                  </TD>\r\n                  <TD>\r\n                    <TT>{a.valueDate}</TT>\r\n                  </TD>\r\n                  <TD1>\r\n                    <TT>{a.description}</TT>\r\n                  </TD1>\r\n                  <TD3>\r\n                    <TT>{a.code}</TT>\r\n                  </TD3>\r\n                  <TD>\r\n                    <TT>{a.amount}</TT>\r\n                  </TD>\r\n                </TR>\r\n                </React.Fragment>\r\n                ))\r\n              : ''}\r\n          </Table>\r\n          <Text\r\n            style={styles.pageNumber}\r\n            render={({ pageNumber, totalPages }) =>\r\n              `${pageNumber} / ${totalPages}`\r\n            }\r\n            fixed\r\n          />\r\n        </Page>\r\n      </Document>\r\n    );\r\n  }\r\n}\r\n\r\nFont.register({\r\n  family: 'Oswald',\r\n  src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf',\r\n});\r\n\r\nconst Table = styled.View`\r\ndisplay: table; width:auto; borderStyle: solid; borderWidth: 1; borderRightWidth: 0; borderBottomWidth: 0'\r\n`;\r\n\r\nconst TR = styled.View`\r\nflexDirection: row; margin:auto;'\r\n`;\r\n\r\nconst TD = styled.View`\r\nwidth: 13%; borderStyle: solid; borderWidth: 1; borderLeftWidth: 0; borderTopWidth: 0;'\r\n`;\r\n\r\nconst TD1 = styled.View`\r\nwidth: 46%; borderStyle: solid; borderWidth: 1; borderLeftWidth: 0; borderTopWidth: 0;'\r\n`;\r\n\r\nconst TD3 = styled.View`\r\nwidth: 15%; borderStyle: solid; borderWidth: 1; borderLeftWidth: 0; borderTopWidth: 0;'\r\n`;\r\n\r\nconst TT = styled.Text`\r\n  margin: 10px;\r\n  font-size: 9px;\r\n  font-family: 'Helvetica';\r\n`;\r\n\r\nconst TT1 = styled.Text`\r\n  margin: 10px;\r\n  font-size: 10px;\r\n  font-family: 'Helvetica';\r\n  ont-weight: bold;\r\n`;\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n    fontFamily: 'Oswald',\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n    fontFamily: 'Oswald',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 8,\r\n    textAlign: 'justify',\r\n    fontFamily: 'Times-Roman',\r\n  },\r\n  image: {\r\n    marginVertical: 0,\r\n    marginHorizontal: 0,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nexport default bankStatement;\r\n","import React from 'react';\r\nimport { t } from '../../i18n';\r\nimport ListeOperationsPdf from '../../pdf/account/bankStatement';\r\nimport { CSVLink } from 'react-csv';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\n\r\nconst headers = [\r\n  { key: 'date', label: t('Accounts:date') },\r\n  { key: 'valueDate', label: t('Accounts:dateValue') },\r\n  { key: 'description', label: t('Accounts:description') },\r\n  { key: 'code', label: t('Accounts:reference') },\r\n  { key: 'amount', label: t('Accounts:amount') },\r\n];\r\nconst prefix = 'Historique_';\r\nconst suffixExcel = '.csv';\r\nconst suffixPDF = '.pdf';\r\n\r\nconst panel = props => {\r\n  const selectedAccountId =\r\n    props.selectedAccountId !== undefined\r\n      ? props.selectedAccountId\r\n      : '';\r\n  const name = `${prefix.concat(`${selectedAccountId}`)}`;\r\n  const filenameExcel = `${name.concat(`${suffixExcel}`)}`;\r\n  const filenamePdf = `${name.concat(`${suffixPDF}`)}`;\r\n  return (\r\n    <div className=\"panel panel-default\">\r\n      <div className=\"panel-heading panel-heading-divider\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">{props.title}</div>\r\n         {props.button? (\r\n           <div className=\"col-md-6 text-right\">\r\n           <button className=\"btn btn-space btn-default md-trigger addform popin_btn\" data-modal=\"ajoutfavoris\" onClick={props.onclick}><span>{props.btntxt}</span></button>\r\n         </div>\r\n         ):null\r\n        } \r\n          <div className=\"col-md-6\">\r\n          {props.download ? (\r\n            <div className=\"download_links dropdown_area float_right\">\r\n              <span className=\"purple_download\">\r\n                {t('Components:downloadHistory')}\r\n                <PDFDownloadLink\r\n                  document={\r\n                    <ListeOperationsPdf\r\n                      data={props.operations}\r\n                      numeroCompte={props.selectedAccountId}\r\n                    />\r\n                  }\r\n                  fileName={filenamePdf}\r\n                >\r\n                  {' '}\r\n                  PDF&nbsp;&nbsp;\r\n                </PDFDownloadLink>\r\n                <CSVLink\r\n                  data={props.operations}\r\n                  separator={';'}\r\n                  headers={headers}\r\n                  filename={filenameExcel}\r\n                >\r\n                  EXCEL\r\n                </CSVLink>\r\n              </span>\r\n            </div>):null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"panel-body\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default panel;\r\n","import React from 'react';\r\n\r\nconst pageHeadNav = props => (\r\n  <div className=\"page-head_nav\">\r\n    <ul>{props.children}</ul>\r\n  </div>\r\n);\r\n\r\nexport default pageHeadNav;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c5f44293.PNG\";"],"sourceRoot":""}